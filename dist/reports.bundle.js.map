{"version":3,"file":"reports.bundle.js","sources":["../src/utilites/userParamsGetters.js","../src/services/bitrixServices.js","../src/store.js","../src/components/templateItem.js","../src/components/templatesList.js","../src/utilites/xmlReform.js","../src/components/DropdownMenu.js","../src/components/DropdownOptions.js","../src/utilites/getOptions.js","../src/components/ModalSelectorItems.js","../src/components/ModalSelectedItems.js","../src/components/ModalForm.js","../src/components/Pagination.js","../src/components/tableBody.js","../src/components/reportTable.js","../src/components/ReportsMain.js","../src/application.js"],"sourcesContent":["export async function readJsonFile(filePath) {\r\n    return fetch(filePath)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch ${filePath}. Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            return data;\r\n        })\r\n        .catch(error => {\r\n            console.error(`Error reading JSON file ${filePath}:`, error);\r\n            throw error;\r\n        });\r\n}\r\n\r\n\r\nexport const getWorkPosition = async () => {\r\n    try {\r\n        const response = await BX.rest.callMethod('im.user.get', {});\r\n        return response['answer']['result']['work_position'];\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getUsersByPosition = async (positionToSearch) => {\r\n    try {\r\n        const response = await BX.rest.callMethod('user.get', {\r\n            filter: {'WORK_POSITION': positionToSearch},\r\n        });\r\n        return response['answer']['result'];\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getOneAssData = async (workPosition) => {\r\n    const response = await getUsersByPosition(workPosition);\r\n    const user = response[0];\r\n\r\n    if (!user || !user['UF_USR_GUID'] || !user['UF_USR_STORAGES3']) {\r\n        return null;\r\n    }\r\n    const storages = JSON.parse(user['UF_USR_STORAGES3']);\r\n    const secondName = user['SECOND_NAME'] ? user['SECOND_NAME'] : ''\r\n    if (workPosition.includes(\"ТП\")) {\r\n        const clients = await getUserClients(user['UF_USR_GUID']);\r\n        return {\r\n            'name': user['LAST_NAME'] + ' ' + user['NAME'] + ' ' + secondName + ', ' + workPosition,\r\n            'guid': user['UF_USR_GUID'],\r\n            'storages': storages,\r\n            'clients': clients,\r\n        };\r\n    }\r\n    return {\r\n        'name': user['LAST_NAME'] + ' ' + user['NAME'] + ' ' + secondName + ', ' + workPosition,\r\n        'guid': user['UF_USR_GUID'],\r\n        'storages': storages,\r\n    };\r\n}\r\n\r\nexport const getHierarchy = async () => {\r\n    return await readJsonFile('../../local/js/local/reports/src/data/workPositionsConfig.json');\r\n}\r\n\r\nexport const getUserAttrs = async () => {\r\n    const workPos = await getWorkPosition();\r\n    const workPositionsJson = await readJsonFile('../../local/js/local/reports/src/data/workPositionsConfig.json');\r\n    const subordinates = getSubordinates(workPositionsJson, workPos);\r\n    if (!subordinates) {\r\n        return null;\r\n    }\r\n    const userData = await getOneAssData(workPos);\r\n    let userSubs = await getUserManagers(subordinates);\r\n    if (!Array.isArray(userSubs)) {\r\n        return {...userData, managers: [userSubs]};\r\n    }\r\n    return {...userData, managers: userSubs};\r\n}\r\n\r\n/**\r\n * Функция для поиска подчиненных объекта по ключу во вложенных объектах или массивах.\r\n * @param {object|array} obj - Исходный объект структуры должностей.\r\n * @param {string} target - Искомая должность.\r\n * @returns {any} Возвращается объект либо массив подчинённых. Если пользователь не обладает подчинёнными,\r\n * возвращается его должность. В случае, если должность отсутствует в структуре, возвращается null.\r\n */\r\nexport const getSubordinates = (obj, target) => {\r\n    // Проверяем, является ли obj массивом\r\n    if (obj && Array.isArray(obj)) {\r\n        // Если obj - массив, проверяем наличие target в массиве\r\n        const result = obj.includes(target) ? target : null;\r\n        return result;\r\n    }\r\n\r\n    // Если obj не массив, проверяем, является ли obj объектом\r\n    if (obj && typeof obj === 'object') {\r\n        // Если obj - объект, проверяем наличие target в качестве ключа\r\n        if (Object.keys(obj).includes(target)) {\r\n            // Если target найден в качестве ключа, возвращаем соответствующее значение\r\n            return obj[target];\r\n        }\r\n\r\n        // Если target не найден в качестве ключа, рекурсивно вызываем функцию для каждого элемента объекта\r\n        for (const item in obj) {\r\n            const result = getSubordinates(obj[item], target);\r\n            // Если результат не null, возвращаем найденное значение\r\n            if (result) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    // Если target не найден, возвращаем null\r\n    return null;\r\n};\r\n\r\nexport const getSubordinates1 = (obj, target) => {\r\n    if (obj && Array.isArray(obj)) {\r\n        // Если obj - массив, проверяем наличие target в массиве\r\n        return null\r\n    }\r\n    // Проверяем, является ли obj объектом\r\n    if (obj && typeof obj === 'object') {\r\n        // Если obj - объект, проверяем наличие target в качестве ключа\r\n        if (Object.keys(obj).includes(target)) {\r\n            // Если target найден в качестве ключа, возвращаем соответствующее значение\r\n            return Array.isArray(obj[target]) ? obj[target] : Object.keys(obj[target]);\r\n        }\r\n\r\n        // Если target не найден в качестве ключа, рекурсивно вызываем функцию для каждого элемента объекта\r\n        for (const item in obj) {\r\n            const result = getSubordinates1(obj[item], target);\r\n            // Если результат не null, возвращаем найденное значение\r\n            if (result !== null) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    // Если target не найден, возвращаем null\r\n    return null;\r\n};\r\n\r\n\r\nexport const getUserManagers = async (subsObj) => {\r\n    if (typeof subsObj === 'string') {\r\n        return await getOneAssData(subsObj);\r\n    } else if (Array.isArray(subsObj)) {\r\n        const result = [];\r\n        for (const item of subsObj) {\r\n            const userData = await getOneAssData(item);\r\n            if (userData) {\r\n                result.push(userData);\r\n            }\r\n        }\r\n        return result;\r\n    } else if (typeof subsObj === 'object') {\r\n        const result = [];\r\n        for (const item of Object.keys(subsObj)) {\r\n            const tmpData = await getOneAssData(item);\r\n            if (!tmpData) {\r\n                continue\r\n            }\r\n            const userSubs = await getUserManagers(subsObj[item]);\r\n            const userData = {...tmpData, managers: userSubs};\r\n            result.push(userData);\r\n        }\r\n        return result\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const getUserClients = async (userGuid) => {\r\n    try {\r\n        const response = await fetch(`http://192.168.91.166/1cApi/getPartners/${userGuid}`, {\r\n            method: 'GET',\r\n        })\r\n        const result = await response.json();\r\n        if (result.body.length > 0) {\r\n            return result.body\r\n        }\r\n        return [];\r\n    } catch (error) {\r\n        return null\r\n    }\r\n}","import { readJsonFile } from \"../utilites/userParamsGetters\";\n\nconst BITRIX_URL = \"http://192.168.91.166\";\n// const BITRIX_URL = 'https://bitrix24.martinural.ru';\nconst WORK_POSITIONS_DIRECTORATE = [\n  \"Заместитель генерального директора\",\n  \"Генеральный директор\",\n  \"Помощник генерального директора\",\n  \"Начальник отдела розничных продаж\",\n  \"Специалист по информационным технологиям \",\n  \"Начальник отдела /Юридический отдел/\",\n  \"Логист\",\n];\n\nexport const getWorkPosition = async () => {\n  try {\n    const response = await BX.rest.callMethod(\"im.user.get\", {});\n    let workPos = response[\"answer\"][\"result\"][\"work_position\"];\n    if (WORK_POSITIONS_DIRECTORATE.includes(workPos)) {\n      workPos = \"Дирекция\";\n    }\n    return workPos;\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw error;\n  }\n};\n\nexport const getUsersByPosition = async (positionToSearch) => {\n  try {\n    const response = await BX.rest.callMethod(\"user.get\", {\n      filter: { WORK_POSITION: positionToSearch },\n    });\n    return response[\"answer\"][\"result\"];\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw error;\n  }\n};\nexport const collectDefaultData = async (workPos) => {\n  const response = await getUsersByPosition(workPos);\n  const userData = response[0];\n  if (!userData || !userData[\"UF_USR_GUID\"] || !userData[\"UF_USR_STORAGES3\"]) {\n    return null;\n  }\n  const storages = JSON.parse(user[\"UF_USR_STORAGES3\"]);\n  const secondName = userData[\"SECOND_NAME\"] ? userData[\"SECOND_NAME\"] : \"\";\n  return {\n    name:\n      userData[\"LAST_NAME\"] +\n      \" \" +\n      userData[\"NAME\"] +\n      \" \" +\n      secondName +\n      \", \" +\n      workPos,\n    guid: userData[\"UF_USR_GUID\"],\n    storages: storages,\n  };\n};\n\nexport const createFilename = async (reportName) => {\n  const response = await BX.rest.callMethod(\"im.user.get\", {});\n  const userId = response[\"answer\"][\"result\"][\"id\"];\n  const currentDate = new Date();\n  return (\n    userId +\n    reportName +\n    currentDate.getFullYear() +\n    currentDate.getMonth() +\n    currentDate.getDay() +\n    currentDate.getTime()\n  );\n};\nexport const getReportFrom1C = async (xml, filename) => {\n  const storageId = await getUserDiskId();\n  const formData = new FormData();\n  const serializer = new XMLSerializer();\n  formData.append(\"xml\", serializer.serializeToString(xml));\n  formData.append(\"filename\", filename);\n  formData.append(\"storageId\", storageId);\n\n  const response = await fetch(BITRIX_URL + \"/1cApi/getReport\", {\n    method: \"POST\",\n    body: formData,\n  });\n  return response.text();\n};\n\nexport const downloadReportFile = async (fileId) => {\n  BX.rest.callMethod(\"disk.file.get\", { id: fileId }, function (result) {\n    if (result.error()) {\n      console.log(result.error());\n    } else {\n      console.log(result.data());\n      const response = result.data();\n      const url = response[\"DOWNLOAD_URL\"];\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = response[\"NAME\"];\n      document.body.appendChild(link);\n      link.click();\n      window.URL.revokeObjectURL(url);\n    }\n  });\n};\n\nexport const goToEdit = async (fileId) => {\n  let linkToEdit = BX.util.add_url_param(\"/bitrix/services/main/ajax.php\", {\n    action: \"disk.api.documentService.goToPreview\",\n    serviceCode: \"onlyoffice\",\n    objectId: fileId,\n    attachedObjectId: 0,\n    versionId: 0,\n    IFRAME: \"Y\",\n    IFRAME_TYPE: \"SIDE_SLIDER\",\n  });\n\n  const currentSlider = BX.SidePanel.Instance.getSliderByWindow(window);\n  if (!currentSlider) {\n    BX.SidePanel.Instance.open(linkToEdit, {\n      width: \"100%\",\n      cacheable: false,\n      allowChangeHistory: false,\n      data: {\n        documentEditor: true,\n      },\n    });\n  } else {\n    currentSlider.setContent(\n      '<iframe src=\"' + linkToEdit + '\" width=\"100%\" height=\"100%\"></iframe>'\n    );\n    currentSlider.setTitle(\"Заголовок слайдера\");\n  }\n};\n\nexport const getUserClients = async (userGuid) => {\n  try {\n    const response = await fetch(\n      BITRIX_URL + `/1cApi/getPartners/${userGuid}`,\n      {\n        method: \"GET\",\n      }\n    );\n    const result = await response.json();\n    if (result.body.length > 0) {\n      return result.body;\n    }\n    return [];\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const getHierarchy = async () => {\n  return await readJsonFile(\n    \"../../local/js/local/reports/src/data/workPositionsConfig.json\"\n  );\n};\n\nexport const getUserDiskId = async () => {\n  const response = await BX.rest.callMethod(\"im.user.get\", {});\n  let userId = response[\"answer\"][\"result\"][\"id\"];\n  const response2 = await BX.rest.callMethod(\"disk.storage.getlist\", {\n    filter: {\n      ENTITY_ID: userId,\n    },\n  });\n  return response2[\"answer\"][\"result\"][0][\"ID\"];\n};\n\nexport const getHierarchyFrom1C = async () => {\n  const response = await fetch(DOMAIN + \"/1cApi/getHierarchy/\", {\n    method: \"GET\",\n  });\n  return response.json();\n};\n","//СУКО\nimport { defineStore } from \"ui.vue3.pinia\";\nimport templatesJson from \"./data/reportsStructure.json\";\nimport {\n  collectDefaultData,\n  getHierarchy,\n  getUserClients,\n  getWorkPosition,\n} from \"./services/bitrixServices\";\nimport { getSubordinates1 } from \"./utilites/userParamsGetters\";\n\nexport const useReportsStore = defineStore(\"reports\", {\n  state: () => ({\n    userAttrs: null,\n    userAttrsTest: null,\n    workPosition: null,\n    templates: null,\n    modalActive: false,\n    reportType: null,\n    activeRepStructure: null,\n    error: null,\n    hierarchyStructure: null,\n    // pagesCount: 1,\n    // currentPage: 0,\n    // allTableData: null,\n    currentTableBody: null,\n    // currentTableHeader: null,\n    // pageSize: 50,\n    currentTableParams: null,\n    currentFilename: null,\n    modalFilterLoading: false,\n  }),\n  actions: {\n    setUserAttrs(value) {\n      this.userAttrs = value;\n    },\n    setTemplatesConfig(value) {\n      this.templatesConfig = value;\n    },\n    async setWorkPosition() {\n      this.workPosition = await getWorkPosition();\n    },\n    setTemplates(value) {\n      this.templates = value;\n    },\n    setActiveReport(value) {\n      this.activeRepStructure = templatesJson[value];\n      this.reportType = value;\n      this.toggleModal();\n    },\n    setCurrentFilename(filename) {\n      this.currentFilename = filename;\n    },\n    toggleModal() {\n      this.modalActive = !this.modalActive;\n    },\n    addTableData(tableData, tableParams) {\n      this.currentTableParams = tableParams;\n      this.currentPage = 0;\n      const checkSize = tableData.length / this.pageSize;\n      // this.currentTableHeader = tableData.splice(0, 2);\n      this.currentTableBody = tableData;\n    },\n    switchCurrentTable(pageNum) {\n      this.currentPage = pageNum;\n      const startIndex = this.pageSize * pageNum;\n      if (pageNum === this.pagesCount) {\n        const lastIndex = this.allTableData.length;\n        this.currentTableBody = this.allTableData.slice(startIndex, lastIndex);\n        return;\n      }\n      const endIndex = startIndex + this.pageSize;\n      this.currentTableBody = this.allTableData.slice(startIndex, endIndex);\n    },\n    handleCloseModal() {\n      this.activeRepStructure = null;\n      this.reportType = null;\n      this.modalActive = false;\n    },\n    async loadData(field) {\n      if ([\"managers\", \"clients\"].includes(field)) {\n        await this.loadManagersData();\n      } else {\n        await this.loadDefaultData();\n      }\n    },\n    async loadDefaultData(workPos = null) {\n      if (workPos === null) {\n        workPos = await getWorkPosition();\n      }\n      this.userAttrsTest = await collectDefaultData(workPos);\n    },\n    async asyncLoadClients(storeTarget, guid) {\n      const storeData = this.findItemById(this.userAttrsTest, storeTarget);\n      storeData.clients = await getUserClients(guid);\n    },\n    async asyncLoadData(workPos = null, target = null) {\n      if (!workPos) {\n        workPos = await getWorkPosition();\n      }\n\n      if (this.userAttrsTest === null) {\n        this.userAttrsTest = await collectDefaultData(workPos);\n\n        const tmpWorkPos = await getWorkPosition();\n        if (tmpWorkPos.includes(\"ТП\") && !target) {\n          const clients = await getUserClients(this.userAttrsTest[\"guid\"]);\n          this.userAttrsTest[\"managers\"] = [{ ...this.userAttrsTest, clients }];\n        }\n      }\n\n      let storeData = this.userAttrsTest;\n      if (target) {\n        storeData = this.findItemById(this.userAttrsTest, target) || storeData;\n      }\n\n      const hierarchy = await getHierarchy();\n      const subs = getSubordinates1(hierarchy, workPos);\n\n      if (subs && subs.length > 0) {\n        for (const item of subs) {\n          const itemAttrs = await collectDefaultData(item);\n          if (!itemAttrs) {\n            continue;\n          }\n          if (!storeData.managers) {\n            storeData.managers = [];\n          }\n          const check = storeData.managers.find(\n            (manager) => manager.name === itemAttrs.name\n          );\n          if (!check) {\n            storeData.managers.push(itemAttrs);\n          }\n          if (item.includes(\"ТП\")) {\n            this.asyncLoadClients(itemAttrs.name, itemAttrs.guid);\n          }\n          await this.asyncLoadData(item, itemAttrs.name);\n        }\n      }\n    },\n    async setHierarchyStructure() {\n      this.hierarchyStructure = await getHierarchy();\n    },\n    findItemById(data, name) {\n      if (typeof data === \"object\") {\n        if (data.name === name) {\n          return data;\n        }\n        if (data.managers && Array.isArray(data.managers)) {\n          for (const manager of data.managers) {\n            const foundItem = this.findItemById(manager, name);\n            if (foundItem !== null) {\n              return foundItem;\n            }\n          }\n        }\n      }\n      return null;\n    },\n  },\n});\n","import './templateItem.css'\r\nimport {mapState, mapActions, mapGetters} from \"ui.vue3.pinia\";\r\nimport {useReportsStore} from '../store';\r\n\r\n\r\nexport const TemplateItem = {\r\n    props: {\r\n        imageSrc: {\r\n            type: String,\r\n            required: false\r\n        },\r\n        templateName: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        handleItemClick: {\r\n            type: Function,\r\n            required: false\r\n        }\r\n    },\r\n    template: `\r\n      <div @click=\"handleItemClick\" class=\"item__container\">\r\n              <template v-if=\"imageSrc\">\r\n                <img :src=\"'../local/js/local/reports/public/' + templateName + '.svg'\" alt=\"Task Image\">\r\n              </template>\r\n      <!--        <p>{{ templateName }}</p>-->\r\n      {{ templateName }}\r\n      </div>`\r\n    ,\r\n    styles: `\r\n    /* Ваши стили компонента Item */\r\n    .item__container {\r\n      /* стили */\r\n    }\r\n  `\r\n};\r\n","import {TemplateItem} from './templateItem'\r\nimport './TemplatesList.css'\r\nimport templatesJson from '../data/reportsStructure.json';\r\nimport {mapState, mapActions, mapGetters} from \"ui.vue3.pinia\";\r\nimport {useReportsStore} from '../store';\r\n\r\nexport const TemplatesList = {\r\n    components: {\r\n        TemplateItem,\r\n    },\r\n    methods: {\r\n        ...mapActions(useReportsStore, ['setActiveReport', 'toggleModal']),\r\n        onClickItem(item) {\r\n            this.setActiveReport(item);\r\n        }\r\n    },\r\n    computed: {\r\n        templates() {\r\n            return templatesJson\r\n        }\r\n    },\r\n    template: `\r\n<!--      <h1 class = \"text_name\">Отчёты</h1>-->\r\n      <div class=\"templates__container\">\r\n\r\n      <TemplateItem\r\n          v-for=\"item in Object.keys(templates)\"\r\n          :imageSrc=\"'../local/js/local/reports/public/report.svg'\"\r\n          :templateName=\"templates[item].name\"\r\n          :handleItemClick=\"()=>onClickItem(item)\"\r\n      />\r\n      </div>`\r\n    ,\r\n    styles: `\r\n    /* Ваши стили компонента Item */\r\n    .templates__container {\r\n      display: flex;\r\n      flex-direction: row;\r\n    }`\r\n};\r\n","function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    date.setHours(23);\r\n    date.setMinutes(59);\r\n    date.setSeconds(59);\r\n    return date.toISOString().slice(0, 19).replace(' ', 'T');\r\n}\r\n\r\nfunction reformXmlField(xmlObject, fieldName, value) {\r\n    const parser = new DOMParser();\r\n    const serializer = new XMLSerializer();\r\n\r\n    // Найти элемент с нужным полем\r\n    const fieldElement = xmlObject.querySelector(fieldName);\r\n    if (fieldElement) {\r\n        if (Array.isArray(value)) {\r\n            // Если значение является массивом, дублировать текущее значение и добавить переданные значения\r\n            const currentValue = fieldElement.textContent;\r\n\r\n            value.forEach((item, index) => {\r\n                const clonedElement = fieldElement.cloneNode(true);\r\n                clonedElement.textContent = item.guid;\r\n\r\n                // Добавить новый элемент после текущего элемента\r\n                fieldElement.parentNode.insertBefore(clonedElement, fieldElement.nextSibling);\r\n            });\r\n            fieldElement.parentNode.removeChild(fieldElement);\r\n        } else {\r\n            // Просто установить новое значение, если передано одно значение\r\n            fieldElement.textContent = value.guid;\r\n        }\r\n\r\n        const updatedXmlString = serializer.serializeToString(xmlObject);\r\n\r\n        // Вернуть обновленный XML-документ в виде строки\r\n        return xmlObject;\r\n    } else {\r\n        console.error(`Field '${fieldName}' not found in the XML object.`);\r\n    }\r\n}\r\n\r\nfunction reformXmlPeriod(xmlDoc, startDate, endDate) {\r\n    const periodElement = Array.from(xmlDoc.querySelectorAll('dataParameters item parameter')).find((item) => item.textContent === 'Период');\r\n    const endDateElement = xmlDoc.querySelector('dataParameters');\r\n    const parentElement = periodElement.closest('item');\r\n    const startTag = parentElement.querySelector('value startDate');\r\n    const endTag = parentElement.querySelector('value endDate');\r\n    startTag.textContent = formatDate(startDate);\r\n    endTag.textContent = formatDate(endDate);\r\n    return xmlDoc\r\n}\r\n\r\nfunction reformXmlDate(xmlDoc, date) {\r\n    const periodElement = Array.from(xmlDoc.querySelectorAll('dataParameters item parameter')).find((item) => item.textContent === 'ДатаОтчета');\r\n\r\n    const parentElement = periodElement.closest('item');\r\n\r\n    const dateTag = parentElement.querySelector('value');\r\n\r\n    dateTag.textContent = formatDate(date);\r\n\r\n    return xmlDoc\r\n}\r\n\r\nexport {reformXmlField, reformXmlPeriod, reformXmlDate};","import \"./DropdownMenu.css\";\n\nexport const DropdownMenu = {\n  props: {\n    menuText: {\n      type: String,\n      required: true,\n    },\n    checkboxAction: {\n      type: Function,\n      required: true,\n    },\n    checkboxState: {\n      type: String,\n      required: true,\n    },\n    dropdownLength: {\n      type: Number,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      isDropdownVisible: false,\n    };\n  },\n  computed: {\n    uniqueId() {\n      return this.stringToHash(this.menuText);\n    },\n    isSlotNotEmpty() {\n      return true;\n    },\n  },\n  methods: {\n    toggleDropdown(event) {\n      this.isDropdownVisible = !this.isDropdownVisible;\n      if (event) {\n        event.stopPropagation();\n      }\n    },\n    stringToHash(str) {\n      let hash = 0;\n      if (str.length === 0) return hash;\n      for (let i = 0; i < str.length; i++) {\n        let char = str.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash;\n      }\n      return hash;\n    },\n  },\n  template: `\n      <template v-if=\"isSlotNotEmpty\">\n        <div class=\"dropdown__container\">\n          <div :class=\"isDropdownVisible? 'dropdown__menuButton_opened' : 'dropdown__menuButton'\">\n            <span class=\"dropdown__menuButton__arrow\" @click=\"toggleDropdown\">\n                <img :src=\"isDropdownVisible ?\n                '../local/js/local/reports/public/minus.svg'\n                :\n                '../local/js/local/reports/public/plus.svg'\"\n                     alt=\"&darr;\"\n                >\n            </span>\n            <div class=\"dropdown__menuButton__text\" @click=\"toggleDropdown\">{{ menuText }}</div>\n            <div class=\"dropdown__menuButton__checkbox\">\n              <input type=\"checkbox\" v-model=\"checkboxState\" @change=\"checkboxAction\" :id=\"uniqueId\">\n              <label :for=\"uniqueId\">Выбрать все</label>\n            </div>\n          </div>\n          <div class=\"dropdown__menu\"\n               :style=\"{ \n                'display': isDropdownVisible ? 'block' : 'none'}\"\n          >\n            <template v-if=\"isDropdownVisible\">\n              <slot>\n                <div class=\"selectorItems__option\"> Отсуствуют данные...</div>\n              </slot>\n            </template>\n          </div>\n        </div>\n      </template>\n    `,\n};\n","export const DropdownOptions = {\n  props: {\n    options: {\n      type: Array,\n      required: true,\n    },\n    checkOption: {\n      type: Function,\n      required: true,\n    },\n    containerHeight: {\n      type: Number,\n      required: true,\n    },\n    scrollContainerRef: {\n      type: Object,\n      required: true,\n    },\n    selectItem: {\n      type: Function,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      isLoading: true,\n    };\n  },\n  mounted() {\n    this.isLoading = false;\n  },\n  template: `\n    <template v-if=\"isLoading\">\n      <div>\n        Загрузка...\n      </div>\n    </template>\n    <template v-else>\n      <div v-for=\"(item, index) in options\" :key=\"index\" class=\"selectorItems__option\" @click=\"selectItem(item)\">\n      <span v-if=\"checkOption(item)\">\n        <img src=\"../local/js/local/reports/public/checked.svg\" alt=\"&darr;\">\n      </span>\n        {{ item.name }}\n      </div>\n      <template v-if=\"options.length===0\">\n        <div class=\"selectorItems__option\">Нет доступных клиентов</div>\n      </template>\n    </template>\n  `,\n};\n","export function getOptions(dataArray, field) {\r\n    const resultOptions = [];\r\n\r\n    if (field === 'managers') {\r\n        const managersCheck = dataArray.some(item => 'managers' in item);\r\n        // Рекурсивно вызываем getOptions для поля \"managers\"\r\n        if (managersCheck) {\r\n            dataArray.forEach(item => {\r\n                if ('managers' in item) {\r\n                    resultOptions.push(...getOptions(item.managers, field));\r\n                }\r\n            });\r\n        } else {\r\n            return dataArray;\r\n        }\r\n    } else if (field === 'clients') {\r\n        // Проверяем наличие ключей \"managers\" и \"clients\" в каждом элементе массива\r\n        const managersCheck = dataArray.some(item => 'managers' in item);\r\n        const clientsCheck = dataArray.some(item => 'clients' in item);\r\n        console.log(managersCheck, clientsCheck);\r\n        // Рекурсивно вызываем getOptions для поля \"managers\", если есть\r\n        if (managersCheck) {\r\n            const tmpMngrs = getOptions(dataArray, 'managers');\r\n            console.log(tmpMngrs);\r\n            tmpMngrs.forEach(item => {\r\n                resultOptions.push(...item.clients);\r\n            });\r\n        } else if (clientsCheck) {\r\n            // Если есть поле \"clients\", добавляем его значения в resultOptions\r\n            dataArray.forEach(item => {\r\n                if ('clients' in item) {\r\n                    resultOptions.push(...item.clients);\r\n                }\r\n            });\r\n        }\r\n    } else {\r\n        return dataArray;\r\n    }\r\n    return resultOptions.filter(item => item !== null);\r\n}\r\n","import { mapState, mapActions, mapGetters } from \"ui.vue3.pinia\";\nimport \"./ModalSelectElement.css\";\nimport { useReportsStore } from \"../store\";\nimport { DropdownMenu } from \"./DropdownMenu\";\nimport { DropdownOptions } from \"./DropdownOptions\";\nimport { getOptions } from \"../utilites/getOptions\";\n\nexport const ModalSelectorItems = {\n  name: \"ModalSelectorItems\",\n  props: {\n    filterField: {\n      type: String,\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    options: {\n      type: Array,\n      required: true,\n    },\n    onSelect: {\n      type: Function,\n      required: false,\n    },\n    onRemove: {\n      type: Function,\n      required: false,\n    },\n    selectAllAction: {\n      type: Function,\n      required: false,\n    },\n    removeAllAction: {\n      type: Function,\n      required: false,\n    },\n    checkOption: {\n      type: Function,\n      required: false,\n    },\n    parentCheckboxState: {\n      type: Boolean,\n      required: false,\n    },\n    scrollContainerRef: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      selectedItems: [],\n      isDropdownVisible: false,\n      selectAll: false,\n      isDropdownReady: false,\n    };\n  },\n  components: {\n    DropdownMenu,\n    DropdownOptions,\n  },\n  watch: {\n    parentCheckboxState(newValue, oldValue) {\n      this.selectAll = newValue;\n    },\n  },\n  computed: {\n    optionsLoaded() {\n      return this.options;\n    },\n  },\n  methods: {\n    ...mapActions(useReportsStore, [\"asyncLoadData\"]),\n    toggleDropdown() {\n      this.isDropdownVisible = !this.isDropdownVisible;\n    },\n    toggleSelectAll(options) {\n      this.selectAll = !this.selectAll;\n      const tmpOptions = getOptions(options, this.filterField);\n      if (this.selectAll) {\n        this.selectAllAction(tmpOptions);\n      } else {\n        this.removeAllAction(tmpOptions);\n      }\n    },\n    addItem(item) {\n      if (!this.selectedItems.find((option) => option.guid === item.guid)) {\n        this.selectedItems.push(item);\n        if (this.onSelect) this.onSelect(item);\n      } else {\n        this.removeItem(item);\n      }\n    },\n    removeItem(item) {\n      this.selectedItems = this.selectedItems.filter(\n        (option) => option.guid !== item.guid\n      );\n      if (this.onRemove) this.onRemove(item);\n    },\n    isSelected(option) {\n      return this.selectedItems.some((item) => item.guid === option.guid);\n    },\n    isRecursive() {\n      const filterCheck =\n        this.filterField === \"managers\" || this.filterField === \"clients\";\n      const managersCheck =\n        this.options.length > 0 && this.options[0].managers !== undefined;\n      return filterCheck && managersCheck;\n    },\n    handleDropdownReady() {\n      this.isDropdownReady = true;\n    },\n  },\n  template: `\n    <div class=\"selectorItems__options\">\n      <template v-if=\"optionsLoaded\">\n          <DropdownMenu\n              v-show=\"isDropdownReady\"\n              :menuText=\"title\"\n              :checkboxAction=\"()=>toggleSelectAll(options)\"\n              :checkboxState=\"selectAll\"\n              :dropdownLength=\"options.length > 20 ? 20 : options.length\"\n              @dropdownReady=\"handleDropdownReady\"\n          >\n            <template v-slot:default>\n              <template v-if=\"!isRecursive() && filterField !== 'clients'\">\n                <DropdownOptions\n                    :options=\"options\"\n                    :checkOption=\"checkOption\"\n                    :containerHeight=\"400\"\n                    :scrollContainerRef=\"scrollContainerRef\"\n                    :selectItem=\"addItem\"\n                />\n              </template>\n              <template v-for=\"(item, index) in options\">\n                <template v-if=\"isRecursive()\">\n                  <ModalSelectorItems\n                      :filterField=\"filterField\"\n                      :title=\"item.name\"\n                      :options=\"item.managers\"\n                      :onSelect=\"onSelect\"\n                      :onRemove=\"onRemove\"\n                      :selectAllAction=\"selectAllAction\"\n                      :removeAllAction=\"removeAllAction\"\n                      :checkOption=\"(option) => checkOption(option)\"\n                      :parentCheckboxState=\"selectAll\"\n                      :scrollContainerRef=\"scrollContainerRef\"\n                  />\n                </template>\n                <template v-else-if=\"!isRecursive() && filterField === 'clients'\">\n                  <ModalSelectorItems\n                      :filterField=\"'default'\"\n                      :title=\"item.name\"\n                      :options=\"item.clients? item.clients: []\"\n                      :onSelect=\"onSelect\"\n                      :onRemove=\"onRemove\"\n                      :selectAllAction=\"selectAllAction\"\n                      :removeAllAction=\"removeAllAction\"\n                      :checkOption=\"(option) => checkOption(option)\"\n                      :parentCheckboxState=\"selectAll\"\n                      :scrollContainerRef=\"scrollContainerRef\"\n                  />\n                </template>\n              </template>\n            </template>\n            <template v-else>\n              Загрузка...\n            </template>\n          </DropdownMenu>\n          <div v-if=\"!isDropdownReady\">\n            Загрузка...\n          </div>\n      </template>\n    </div>\n  `,\n};\n","import {mapState, mapActions, mapGetters} from \"ui.vue3.pinia\";\r\nimport {useReportsStore} from '../store'\r\nimport './ModalSelectedItems.css'\r\n\r\nexport const ModalSelectedItems = {\r\n    props: {\r\n        selectedItems: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        removeItem: {\r\n            type: Function,\r\n            required: true\r\n        },\r\n        removeAll: {\r\n            type: Function,\r\n            required: false\r\n        },\r\n    },\r\n    template: `\r\n      <div class=\"selectedItems__mainContainer\">\r\n      <template v-if=\"selectedItems.length > 0\">\r\n        <div\r\n            class=\"selectedItems__item\"\r\n            v-for=\"(item, index) in selectedItems\"\r\n            @click=\"() => removeItem(item)\"\r\n        >\r\n          {{ item['name'] }}\r\n        </div>\r\n      </template>\r\n      <template v-else>\r\n        <div>Здесь будут показаны выбранные элементы</div>\r\n      </template>\r\n      </div>\r\n    `\r\n}","import {\n  reformXmlField,\n  reformXmlPeriod,\n  reformXmlDate,\n} from \"../utilites/xmlReform\";\nimport { mapState, mapActions, mapGetters } from \"ui.vue3.pinia\";\nimport { ref } from \"ui.vue3\";\nimport \"./ModalForm.css\";\nimport { useReportsStore } from \"../store\";\nimport { ModalSelectorItems } from \"./ModalSelectorItems\";\nimport { ModalSelectedItems } from \"./ModalSelectedItems\";\nimport { createFilename, getReportFrom1C } from \"../services/bitrixServices\";\n\nexport const ModalForm = {\n  components: {\n    ModalSelectorItems,\n    ModalSelectedItems,\n  },\n  data() {\n    return {\n      selectedItems: {},\n      selectingError: null,\n      isLoading: false,\n      startDate: \"\",\n      currentDate: \"\",\n      ContainerRefArray: [],\n    };\n  },\n  mounted() {\n    const currentDate = new Date();\n    this.asyncLoadData();\n    const startDateTime = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() - 1,\n      currentDate.getDate(),\n      0,\n      0,\n      0\n    );\n    this.startDate = startDateTime.toISOString().slice(0, 16);\n\n    this.currentDate = currentDate.toISOString().slice(0, 16);\n\n    this.activeRepStructure.filters.map((item) => {\n      if (!this.selectedItems[item.using]) {\n        this.selectedItems[item.using] = [];\n      }\n    });\n  },\n  computed: {\n    ...mapState(useReportsStore, [\n      \"userAttrs\",\n      \"templates\",\n      \"reportType\",\n      \"userAttrsTest\",\n      \"activeRepStructure\",\n    ]),\n    // ...mapGetters(useReportsStore, [\"activeRepStructure\"]),\n    optionsLoaded() {\n      return this.userAttrsTest;\n    },\n  },\n  async updated() {\n    await this.$nextTick();\n  },\n  methods: {\n    ...mapActions(useReportsStore, [\n      \"toggleModal\",\n      \"addTableData\",\n      \"setCurrentFilename\",\n      \"asyncLoadData\",\n    ]),\n    addRef(el) {\n      if (el) {\n        this.ContainerRefArray.push(el);\n      }\n    },\n    closeDateTimePicker(event) {\n      const datetimePicker = event.target;\n      datetimePicker.blur();\n    },\n    filterSelectItem(section, item) {\n      if (!this.selectedItems[section]) {\n        this.selectedItems[section] = [];\n      }\n      if (\n        !this.selectedItems[section].find(\n          (option) => option[\"guid\"] === item[\"guid\"]\n        )\n      ) {\n        this.selectedItems[section] = [...this.selectedItems[section], item];\n      } else {\n        this.filterRemoveItem(section, item);\n      }\n    },\n    filterRemoveItem(section, item) {\n      this.selectedItems[section] = this.selectedItems[section].filter(\n        (option) => option[\"guid\"] !== item[\"guid\"]\n      );\n    },\n    filterClear(section, options) {\n      options.forEach((option) => {\n        this.selectedItems[section] = this.selectedItems[section].filter(\n          (item) => item.guid !== option.guid\n        );\n      });\n    },\n    filterSelectAll(section, options) {\n      if (!this.selectedItems[section]) {\n        this.selectedItems[section] = [];\n      }\n      options.forEach((option) => {\n        if (\n          !this.selectedItems[section].find((item) => item.guid === option.guid)\n        ) {\n          this.selectedItems[section].push(option);\n        }\n      });\n    },\n    filterCheckOption(section, option) {\n      if (!this.selectedItems[section]) {\n        return false;\n      }\n      return this.selectedItems[section].find(\n        (element) => element.guid === option.guid\n      );\n    },\n    async xmlReform() {\n      const checkAllFilters = Object.keys(this.selectedItems).length > 0;\n      if (\n        !this.activeRepStructure.filters.find(\n          (item, index) => this.selectedItems[item.using].length > 0\n        )\n      ) {\n        this.selectingError = \"Выбраны не все параметры отчёта\";\n        return;\n      }\n      const parser = new DOMParser();\n      let xmlDoc = parser.parseFromString(\n        this.templates[this.reportType],\n        \"text/xml\"\n      );\n      const filterItemLeft = xmlDoc.querySelectorAll(\"filter item left\");\n      for (const index in this.activeRepStructure.filters) {\n        const filterSection = this.activeRepStructure.filters[index];\n        if (\n          !this.selectedItems[filterSection.using] ||\n          this.selectedItems[filterSection.using].length < 1\n        ) {\n          continue;\n        }\n        const filterItemLeftArray = Array.from(filterItemLeft);\n        const targetTag = filterItemLeftArray.find(\n          (item) => item.textContent === filterSection.inXml\n        );\n        const parentItemElement = targetTag.closest(\"item\");\n        const rightElement = parentItemElement.querySelector(\"right\");\n        const updatedElement = reformXmlField(\n          parentItemElement,\n          \"right\",\n          this.selectedItems[filterSection.using]\n        );\n        parentItemElement.parentNode.replaceChild(\n          updatedElement,\n          parentItemElement\n        );\n      }\n      for (const index in this.activeRepStructure.parameters) {\n        const paramType = this.activeRepStructure.parameters[index].view;\n        if (paramType === \"Период\") {\n          xmlDoc = reformXmlPeriod(xmlDoc, this.startDate, this.currentDate);\n        } else if (paramType === \"Дата отчёта\") {\n          xmlDoc = reformXmlDate(xmlDoc, this.currentDate);\n        }\n      }\n      this.isLoading = !this.isLoading;\n      const fileName = await createFilename(this.reportType);\n      const response = await getReportFrom1C(xmlDoc, fileName);\n      const { file, data } = JSON.parse(response);\n      this.setCurrentFilename(file);\n      this.addTableData(JSON.parse(data), this.selectedItems);\n      this.isLoading = !this.isLoading;\n      this.toggleModal();\n    },\n  },\n  template: `\n    <div class=\"modal__overlay\">\n      <template v-if=\"isLoading\">\n        <div class=\"modal__loading\">\n        </div>\n      </template>\n      <template v-else-if=\"optionsLoaded\">\n        <div class=\"modal__container\">\n          <div class=\"modal__content\">\n            <h1 class=\"modal__headers\">{{ activeRepStructure.name }}</h1>\n            <template v-for=\"(item, index) in activeRepStructure['parameters']\">\n              <h2 class=\"modal__headers\">{{ item.view }}</h2>\n              <template v-if=\"item.view === 'Период'\">\n                <div class=\"datetime-input-container\">\n                  <div class=\"datetime-input-group\">\n                    <label for=\"startDateTime\">Начальная дата:</label>\n                    <input\n                        type=\"datetime-local\"\n                        id=\"startDateTime\"\n                        v-model=\"startDate\"\n                        class=\"datetime-input\"\n                        @input=\"closeDateTimePicker\"\n                    >\n                  </div>\n                  <div class=\"datetime-input-group\">\n                    <label for=\"endDateTime\">Конечная дата:</label>\n                    <input\n                        type=\"datetime-local\"\n                        id=\"endDateTime\"\n                        v-model=\"currentDate\"\n                        class=\"datetime-input\"\n                        @input=\"closeDateTimePicker\"\n                    />\n                  </div>\n                </div>\n              </template>\n              <template v-else-if=\"item.view === 'Дата отчёта'\">\n                <div class=\"datetime-input-container\">\n                  <div class=\"datetime-input-group\">\n                    <label for=\"startDateTime\">Дата:</label>\n                    <input\n                        type=\"datetime-local\"\n                        id=\"startDateTime\"\n                        v-model=\"currentDate\"\n                        class=\"datetime-input\"\n                        @input=\"closeDateTimePicker\"\n                    >\n                  </div>\n                </div>\n              </template>\n            </template>\n            <h2 class=\"modal__headers\" v-if=\"activeRepStructure['filters'].length > 0\">Фильтр реквизитов</h2>\n            <template v-if=\"selectingError\">\n              <h3>{{ selectingError }}</h3>\n            </template>\n            <template v-for=\"(item,index) in activeRepStructure['filters']\" :key=\"index\">\n              <h3 class=\"modal__headers\">{{ item.view }}</h3>\n              <template v-if=\"optionsLoaded\">\n                <ModalSelectedItems\n                    :selectedItems=\"selectedItems[item.using]?selectedItems[item.using]: []\"\n                    :removeItem=\"(option) => filterRemoveItem(item.using, option)\"\n                    :removeAll=\"()=>filterClear(item.using, userAttrsTest[item['using']])\"\n                />\n                <div class=\"modal__selectors\" :ref=\"addRef\">\n                  <template v-if=\"['clients', 'managers'].includes(item.using)\">\n                    <ModalSelectorItems\n                        :filterField=\"item.using\"\n                        :title=\"'Доступные параметры'\"\n                        :options=\"userAttrsTest['managers']?userAttrsTest['managers']:userAttrsTest[item.using]\"\n                        :onSelect=\"(option) => filterSelectItem(item.using, option)\"\n                        :onRemove=\"(option) => filterRemoveItem(item.using, option)\"\n                        :selectAllAction=\"(options)=>filterSelectAll(item.using, options)\"\n                        :removeAllAction=\"(options)=>filterClear(item.using, options)\"\n                        :checkOption=\"(option) => filterCheckOption(item.using, option)\"\n                        :parentCheckboxState=\"false\"\n                        :scrollContainerRef=\"ContainerRefArray[index]\"\n                    />\n                  </template>\n                  <template v-else>\n                    <ModalSelectorItems\n                        :filterField=\"item.using\"\n                        :title=\"'Доступные параметры'\"\n                        :options=\"userAttrsTest[item.using]\"\n                        :onSelect=\"(option) => filterSelectItem(item.using, option)\"\n                        :onRemove=\"(option) => filterRemoveItem(item.using, option)\"\n                        :selectAllAction=\"(options)=>filterSelectAll(item.using, options)\"\n                        :removeAllAction=\"(options)=>filterClear(item.using, options)\"\n                        :checkOption=\"(option) => filterCheckOption(item.using, option)\"\n                        :parentCheckboxState=\"false\"\n                        :scrollContainerRef=\"ContainerRefArray[index]\"\n                    />\n                  </template>\n                </div>\n              </template>\n              <template>\n                Zagruzka\n              </template>\n            </template>\n          </div>\n          <div class=\"modal__buttons\">\n            <button class=\"ui-btn ui-btn-danger-light\" @click=\"()=>toggleModal()\">Отмена</button>\n            <button class=\"ui-btn ui-btn-success-light\" @click=\"xmlReform\">Сформировать отчет</button>\n          </div>\n        </div>\n      </template>\n    </div>\n  `,\n};\n","import './Pagination.css'\r\n\r\nexport const Pagination = {\r\n    props: {\r\n        currentPage: {\r\n            type: Number,\r\n            require: true\r\n        },\r\n        pagesCount: {\r\n            type: Number,\r\n            require: true\r\n        },\r\n        selectPageAction: {\r\n            type: Function,\r\n            require: true\r\n        }\r\n    },\r\n    methods: {\r\n        switchNext() {\r\n            if (this.currentPage >= this.pagesCount - 1) {\r\n                return;\r\n            }\r\n            const tmpPageNum = this.currentPage + 1;\r\n            this.selectPageAction(tmpPageNum);\r\n            return;\r\n        },\r\n        switchBack() {\r\n            const tmpPageNum = this.currentPage - 1;\r\n            if (this.currentPage <= 0) {\r\n                return;\r\n            }\r\n            this.selectPageAction(tmpPageNum);\r\n            return;\r\n        },\r\n    },\r\n    template: `\r\n      <div class=\"pagination__container\">\r\n      <ul class=\"pagination__list\">\r\n        <li @click=\"() => selectPageAction(0)\" >\r\n          <img :src=\"'../local/js/local/reports/public/doubleleftarrow.svg'\" alt=\"Task Image\">\r\n        </li>\r\n        <li @click=\"switchBack\">\r\n          <img :src=\"'../local/js/local/reports/public/leftarrow.svg'\" alt=\"Task Image\">\r\n        </li>\r\n        <template v-for=\"(n, i) in pagesCount\">\r\n          <template v-if=\"Number(i) === currentPage\">\r\n            <li @click=\"() => selectPageAction(i)\" class=\"pagination__currentItem\">\r\n              {{ n }}\r\n            </li>\r\n          </template>\r\n          <template v-else>\r\n            <li @click=\"selectPageAction(i)\">\r\n              {{ n }}\r\n            </li>\r\n          </template>\r\n        </template>\r\n        <li @click=\"switchNext\">\r\n          <img :src=\"'../local/js/local/reports/public/rightarrow.svg'\" alt=\"Task Image\">\r\n        </li>\r\n        <li @click=\"() => selectPageAction(pagesCount-1)\">\r\n          <img :src=\"'../local/js/local/reports/public/doublerightarrow.svg'\" alt=\"Task Image\">\r\n        </li>\r\n      </ul>\r\n      </div>\r\n    `\r\n}","export const TableBody = {\n    name: 'TableBody',\n    props: {\n        options: {\n            type: Array,\n            required: true,\n        },\n        rowLevel: {\n            type: Number,\n            required: true,\n        }\n    },\n    data() {\n        return {\n            collapsedRows: new Set(), // Множество для хранения индексов скрытых строк\n        };\n    },\n    methods: {\n        checkHiddenRows(rowNum) {\n            const currentLevel = this.options[rowNum][0];\n\n            // Проверяем, что индекс следующей строки в пределах массива и уровень вложенности следующей строки не равен текущему уровню\n            if (rowNum + 1 < this.options.length && this.options[rowNum + 1][0] !== currentLevel) {\n                // Ищем индекс следующей строки с таким же уровнем вложенности\n                const endIndex = this.options.slice(rowNum + 1)\n                    .findIndex((item, index) => item[0] === currentLevel);\n                // Если индекс найден, возвращаем срез массива строк\n                if (endIndex !== -1) {\n                    return this.options.slice(rowNum + 1, rowNum + 1 + endIndex);\n                } else {\n                    return this.options.slice(rowNum + 1);\n                }\n            }\n            return null;\n        },\n        toggleRow(rowNum) {\n            if (this.collapsedRows.has(rowNum)) {\n                this.collapsedRows.delete(rowNum); // Если строка скрыта, удаляем ее из множества скрытых строк\n            } else {\n                this.collapsedRows.add(rowNum); // Если строка видима, добавляем ее в множество скрытых строк\n            }\n            console.log(this.collapsedRows);\n        },\n        isRowCollapsed(rowNum) {\n            return this.collapsedRows.has(rowNum); // Проверяем, скрыта ли строка\n        },\n    },\n    computed: {\n        thisLevelIndexes() {\n            return this.options\n                .map((value, index) => ({value, index}))\n                .filter(item => item.value[0] === this.rowLevel)\n                .map(item => item.index)\n        },\n    },\n    mounted(){\n        this.thisLevelIndexes.forEach((item,index) => {\n            if (this.checkHiddenRows(item)){\n                this.toggleRow(item);\n            }\n        })\n    },\n    template: `\n      <template v-for=\"(row, rowNum) in thisLevelIndexes\">\n        <tr v-if=\"!isRowCollapsed(row) && !checkHiddenRows(row)\">\n          <td v-for=\"(cell, cellIndex) in options[row]\">\n            <template v-if=\"cellIndex===0\">\n              {{ ' ' }}\n            </template>\n            <template v-else>\n              {{ cell === '#NULL!' ? ' ' : cell }}\n            </template>\n          </td>\n        </tr>\n        <tr v-if=\"checkHiddenRows(row)\" @click=\"toggleRow(row)\">\n          <template v-for=\"(cell,cellIndex) in options[row]\">\n            <td>\n              <template v-if=\"cellIndex===0\">\n                <span>\n                <img :src=\"!isRowCollapsed(row) ?\n                '../local/js/local/reports/public/minus.svg'\n                :\n                '../local/js/local/reports/public/plus.svg'\"\n                     alt=\"&darr;\"\n                     style=\"width: 15px;\"\n                >\n                </span>\n              </template>\n              <template v-else>\n                {{ cell === '#NULL!' ? ' ' : cell }}\n              </template>\n            </td>\n          </template>\n        </tr>\n        <TableBody\n            v-if=\"checkHiddenRows(row) && !isRowCollapsed(row)\"\n            :options=\"checkHiddenRows(row)\"\n            :rowLevel=\"rowLevel+1\"\n        />\n      </template>\n    `\n}\n","import \"./reportTable.css\";\nimport { useReportsStore } from \"../store\";\nimport { mapState } from \"ui.vue3.pinia\";\nimport { Ears } from \"ui.ears\";\nimport { Pagination } from \"./Pagination\";\nimport { downloadReportFile, goToEdit } from \"../services/bitrixServices\";\nimport { TableBody } from \"./tableBody\";\n\nexport const ReportTable = {\n  // props: {\n  //     sheetsData: {\n  //         type: Object,\n  //         required: true\n  //     },\n  //     sheetsNames: {\n  //         type: Array,\n  //         required: true,\n  //     }\n  // },\n  computed: {\n    ...mapState(useReportsStore, [\n      \"currentTableBody\",\n      \"currentFilename\",\n      \"currentTableParams\",\n      \"activeRepStructure\",\n      \"reportType\",\n    ]),\n  },\n  methods: {\n    downloadExcelFile() {\n      return downloadReportFile(this.currentFilename);\n    },\n    goToViewExcelFile() {\n      return goToEdit(this.currentFilename);\n    },\n  },\n  components: {\n    Pagination,\n    TableBody,\n  },\n  mounted() {\n    const ears = new Ears({\n      container: document.querySelector(\".table__content\"),\n      smallSize: false,\n      noScrollbar: true,\n    });\n    ears.init();\n  },\n  template: `\n    <div class=\"table__MainContainer\">\n      <div class=\"table__Container\">\n        <div class=\"table__buttonsContainer\">\n          <button class=\"downloadButton ui-btn ui-btn-secondary\" @click=\"downloadExcelFile\">Загрузить на диск\n          </button>\n          <button class=\"downloadButton ui-btn ui-btn-secondary\" @click=\"goToViewExcelFile\">Открыть в редакторе\n          </button>\n        </div>\n        <div class=\"table__content\">\n          <div class=\"table__params\">\n            <template v-if=\"currentTableParams\">\n              <h1>{{ activeRepStructure['name'] }}</h1>\n              <div v-for=\"(value, key) in currentTableParams\" :key=\"key\">\n                <h2>{{ activeRepStructure['filters'].find(item=>item.using === key)['view'] }}: </h2>\n                <h3>\n                  <span v-for=\"(item, index) in value\" :key=\"index\">{{ item.name }}, </span>\n                </h3>\n              </div>\n            </template>\n          </div>\n          <table>\n            <tbody>\n            <TableBody\n                :options=\"currentTableBody\"\n                :rowLevel=\"0\"\n            />\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  `,\n};\n","import { TemplatesList } from \"./templatesList\";\nimport { ModalForm } from \"./ModalForm\";\nimport { ReportTable } from \"./reportTable\";\nimport { useReportsStore } from \"../store\";\nimport { mapState, mapActions, mapGetters } from \"ui.vue3.pinia\";\nimport \"./ReportsMain.css\";\nimport { getUserDiskId } from \"../services/bitrixServices\";\nexport const ReportsMain = {\n  computed: {\n    ...mapState(useReportsStore, [\"modalActive\", \"currentTableBody\"]),\n  },\n  data() {\n    return {\n      loading: true,\n    };\n  },\n  components: {\n    TemplatesList,\n    ModalForm,\n    ReportTable,\n  },\n  methods: {\n    check() {\n      console.log(getUserDiskId());\n    },\n  },\n  template: `\n      <div>\n<!--        <button @click=\"check\">AAAAAAAA</button>-->\n      </div>\n      <div class=\"reports__container\">\n        <TemplatesList/>\n        <template v-if=\"currentTableBody\">\n          <ReportTable/>\n        </template>\n        <template v-else>\n          <div class=\"noReport__container\">\n            <div class=\"noReport__Text\">\n              Нет загруженных отчётов...\n            </div>\n          </div>\n        </template>\n        <ModalForm\n            v-if=\"modalActive\"\n        />\n      </div>\n    `,\n};\n","//И здесь тоже на всякий\n\nimport {BitrixVue, createApp, h} from 'ui.vue3';\nimport {createPinia, defineStore, mapState, mapActions} from 'ui.vue3.pinia';\nimport {Dom, Loc} from 'main.core';\nimport {useReportsStore} from './store';\nimport {getUserAttrs} from \"./utilites/userParamsGetters\";\n\n\nimport {ReportsMain} from './components/ReportsMain';\n\nexport class Reports {\n    #application;\n    #loadingContainer;\n    constructor(rootNode) {\n        this.rootNode = document.querySelector(rootNode);\n        this.pinia = createPinia()\n        this.attachTemplate().then(r => console.log('Ready'));\n    }\n\n    async loadUserData() {\n        // const start = new Date();\n        this.#loadingContainer = document.createElement('div');\n        this.#loadingContainer.classList.add('loading-wheel');\n        this.rootNode.appendChild(this.#loadingContainer);\n        const projectPath = '/local/js/local/reports'\n        const templates = {}\n        const storageXml = await fetch(projectPath + '/src/data/storage.xml');\n        templates['storage'] = await storageXml.text()\n\n        const settlementsStatement = await fetch(projectPath + '/src/data/settlementsStatement.xml');\n        templates['settlementsStatement'] = await settlementsStatement.text()\n\n        const grossProfit = await fetch(projectPath + '/src/data/grossProfit.xml');\n        templates['grossProfit'] = await grossProfit.text()\n\n        const client = await fetch(projectPath + '/src/data/client.xml');\n        templates['client'] = await client.text()\n\n        const debit = await fetch(projectPath + '/src/data/debit.xml');\n        templates['debit'] = await debit.text()\n        const reportsStore = useReportsStore(this.pinia);\n        reportsStore.setTemplates(templates);\n        this.rootNode.removeChild(this.#loadingContainer);\n        this.#loadingContainer = null;\n    }\n\n    async attachTemplate() {\n        const context = this;\n        await this.loadUserData();\n\n        this.#application = BitrixVue.createApp({\n            name: 'Reports',\n            components: {\n                ReportsMain\n            },\n            beforeCreate() {\n                this.$bitrix.Application.set(context);\n            },\n            template: '<ReportsMain/>',\n        });\n\n        this.#application.use(this.pinia);\n        this.#application.mount(this.rootNode);\n    }\n\n    detachTemplate() {\n        if (this.#application) {\n            this.#application.unmount();\n        }\n    }\n}"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","babelHelpers","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","readJsonFile","_x","_readJsonFile","apply","arguments","asyncToGenerator","_callee8","filePath","_callee8$","_context8","fetch","response","ok","concat","status","json","data","error","console","getWorkPosition","_ref","_callee","_callee$","_context","BX","rest","callMethod","t0","getUsersByPosition","_ref2","_callee2","positionToSearch","_callee2$","_context2","filter","_x2","getOneAssData","_ref3","_callee3","workPosition","user","storages","secondName","clients","_callee3$","_context3","JSON","parse","includes","getUserClients","_x3","getHierarchy","_ref4","_callee4","_callee4$","_context4","getUserAttrs","_ref5","_callee5","workPos","workPositionsJson","subordinates","userData","userSubs","_callee5$","_context5","getSubordinates","getUserManagers","Array","isArray","_objectSpread","managers","obj","target","result","item","getSubordinates1","_ref6","_callee6","subsObj","_iterator","_step","_result2","_i","_Object$keys","_item","tmpData","_userData","_callee6$","_context6","_createForOfIteratorHelper","_x4","_ref7","_callee7","userGuid","_callee7$","_context7","body","_x5","BITRIX_URL","WORK_POSITIONS_DIRECTORATE","WORK_POSITION","collectDefaultData","guid","createFilename","reportName","userId","currentDate","Date","getFullYear","getMonth","getDay","getTime","getReportFrom1C","xml","filename","storageId","formData","serializer","getUserDiskId","FormData","XMLSerializer","append","serializeToString","text","downloadReportFile","fileId","id","log","url","link","document","createElement","href","download","appendChild","click","window","URL","revokeObjectURL","_x6","goToEdit","linkToEdit","currentSlider","util","add_url_param","action","serviceCode","objectId","attachedObjectId","versionId","IFRAME","IFRAME_TYPE","SidePanel","Instance","getSliderByWindow","open","width","cacheable","allowChangeHistory","documentEditor","setContent","setTitle","_x7","_ref8","_x8","_ref9","_callee9","_callee9$","_context9","_ref10","_callee10","response2","_callee10$","_context10","ENTITY_ID","getHierarchyFrom1C","_ref11","_callee11","_callee11$","_context11","DOMAIN","useReportsStore","defineStore","state","userAttrs","userAttrsTest","templates","modalActive","reportType","activeRepStructure","hierarchyStructure","currentTableBody","currentTableParams","currentFilename","modalFilterLoading","actions","setUserAttrs","setTemplatesConfig","templatesConfig","setWorkPosition","_this","setTemplates","setActiveReport","templatesJson","toggleModal","setCurrentFilename","addTableData","tableData","tableParams","currentPage","checkSize","pageSize","switchCurrentTable","pageNum","startIndex","pagesCount","lastIndex","allTableData","endIndex","handleCloseModal","loadData","field","_this2","loadManagersData","loadDefaultData","_arguments","_this3","undefined","asyncLoadClients","storeTarget","_this4","storeData","findItemById","asyncLoadData","_arguments2","_this5","tmpWorkPos","hierarchy","subs","_loop","itemAttrs","check","_loop$","find","manager","t1","setHierarchyStructure","_this6","_iterator2","_step2","foundItem","err","TemplateItem","props","imageSrc","String","required","templateName","handleItemClick","Function","template","styles","TemplatesList","components","methods","mapActions","onClickItem","computed","formatDate","dateString","date","setHours","setMinutes","setSeconds","toISOString","replace","reformXmlField","xmlObject","fieldName","parser","DOMParser","fieldElement","querySelector","currentValue","textContent","index","clonedElement","cloneNode","parentNode","insertBefore","nextSibling","removeChild","updatedXmlString","reformXmlPeriod","xmlDoc","startDate","endDate","periodElement","from","querySelectorAll","endDateElement","parentElement","closest","startTag","endTag","reformXmlDate","dateTag","DropdownMenu","menuText","checkboxAction","checkboxState","dropdownLength","Number","isDropdownVisible","uniqueId","stringToHash","isSlotNotEmpty","toggleDropdown","event","stopPropagation","str","hash","char","charCodeAt","DropdownOptions","options","checkOption","containerHeight","scrollContainerRef","selectItem","isLoading","mounted","getOptions","dataArray","resultOptions","managersCheck","some","toConsumableArray","clientsCheck","tmpMngrs","ModalSelectorItems","filterField","title","onSelect","onRemove","selectAllAction","removeAllAction","parentCheckboxState","Boolean","selectedItems","selectAll","isDropdownReady","watch","newValue","oldValue","optionsLoaded","toggleSelectAll","tmpOptions","addItem","option","removeItem","isSelected","isRecursive","filterCheck","handleDropdownReady","ModalSelectedItems","removeAll","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","ModalForm","selectingError","ContainerRefArray","startDateTime","getDate","filters","map","using","mapState","updated","$nextTick","addRef","el","closeDateTimePicker","datetimePicker","blur","filterSelectItem","section","filterRemoveItem","filterClear","filterSelectAll","filterCheckOption","element","xmlReform","checkAllFilters","filterItemLeft","_index","paramType","fileName","_JSON$parse","file","parseFromString","filterSection","filterItemLeftArray","targetTag","parentItemElement","rightElement","updatedElement","inXml","replaceChild","t2","parameters","view","Pagination","require","selectPageAction","switchNext","tmpPageNum","switchBack","TableBody","rowLevel","collapsedRows","Set","checkHiddenRows","rowNum","currentLevel","findIndex","toggleRow","has","add","isRowCollapsed","thisLevelIndexes","ReportTable","downloadExcelFile","goToViewExcelFile","ears","Ears","container","smallSize","noScrollbar","init","ReportsMain","loading","_classPrivateFieldInitSpec","privateMap","_checkPrivateRedeclaration","set","privateCollection","_classPrivateFieldGet","get","_assertClassBrand","_classPrivateFieldSet","_application","WeakMap","_loadingContainer","Reports","rootNode","classCallCheck","pinia","createPinia","attachTemplate","createClass","key","_loadUserData","projectPath","storageXml","settlementsStatement","grossProfit","client","debit","reportsStore","classList","loadUserData","_attachTemplate","context","BitrixVue","createApp","beforeCreate","$bitrix","Application","use","mount","detachTemplate","unmount"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wLACAA,mBAAA,YAAAA,+BAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,wBAAAa,gCAAAC,oCAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,YAAA,WAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,0CAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,kBAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,YAAA,WAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,gBAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,cAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,YAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,gBAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AADA,WAAsBsG,YAAYA,CAAAC,EAAA;IAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAejC,SAAAF;IAAAA,aAAA,GAAAvD,YAAA,CAAA0D,gBAAA,eAAA5G,mBAAA,GAAAoF,IAAA,CAfM,SAAAyB,SAA4BC,QAAQ;MAAA,OAAA9G,mBAAA,GAAAuB,IAAA,UAAAwF,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAnB,IAAA,GAAAmB,SAAA,CAAA9C,IAAA;UAAA;YAAA,OAAA8C,SAAA,CAAAjD,MAAA,WAChCkD,KAAK,CAACH,QAAQ,CAAC,CACjBzD,IAAI,CAAC,UAAA6D,QAAQ,EAAI;cACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;gBACd,MAAM,IAAI5D,KAAK,oBAAA6D,MAAA,CAAoBN,QAAQ,gBAAAM,MAAA,CAAaF,QAAQ,CAACG,MAAM,CAAE,CAAC;;cAE9E,OAAOH,QAAQ,CAACI,IAAI,EAAE;aACzB,CAAC,CACDjE,IAAI,CAAC,UAAAkE,IAAI,EAAI;cACV,OAAOA,IAAI;aACd,CAAC,SACI,CAAC,UAAAC,KAAK,EAAI;cACZC,OAAO,CAACD,KAAK,4BAAAJ,MAAA,CAA4BN,QAAQ,QAAKU,KAAK,CAAC;cAC5D,MAAMA,KAAK;aACd,CAAC;UAAA;UAAA;YAAA,OAAAR,SAAA,CAAAhB,IAAA;;SAAAa,QAAA;KACT;IAAA,OAAAJ,aAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;AAGD,EAAO,IAAMe,eAAe;IAAA,IAAAC,IAAA,GAAAzE,YAAA,CAAA0D,gBAAA,eAAA5G,mBAAA,GAAAoF,IAAA,CAAG,SAAAwC;MAAA,IAAAV,QAAA;MAAA,OAAAlH,mBAAA,GAAAuB,IAAA,UAAAsG,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAjC,IAAA,GAAAiC,QAAA,CAAA5D,IAAA;UAAA;YAAA4D,QAAA,CAAAjC,IAAA;YAAAiC,QAAA,CAAA5D,IAAA;YAAA,OAEA6D,EAAE,CAACC,IAAI,CAACC,UAAU,CAAC,aAAa,EAAE,EAAE,CAAC;UAAA;YAAtDf,QAAQ,GAAAY,QAAA,CAAAlE,IAAA;YAAA,OAAAkE,QAAA,CAAA/D,MAAA,WACPmD,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC;UAAA;YAAAY,QAAA,CAAAjC,IAAA;YAAAiC,QAAA,CAAAI,EAAA,GAAAJ,QAAA;YAEpDL,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAAM,QAAA,CAAAI,EAAO,CAAC;YAAC,MAAAJ,QAAA,CAAAI,EAAA;UAAA;UAAA;YAAA,OAAAJ,QAAA,CAAA9B,IAAA;;SAAA4B,OAAA;KAGpD;IAAA,gBARYF,eAAeA;MAAA,OAAAC,IAAA,CAAAjB,KAAA,OAAAC,SAAA;;EAAA,GAQ3B;AAED,EAAO,IAAMwB,kBAAkB;IAAA,IAAAC,KAAA,GAAAlF,YAAA,CAAA0D,gBAAA,eAAA5G,mBAAA,GAAAoF,IAAA,CAAG,SAAAiD,SAAOC,gBAAgB;MAAA,IAAApB,QAAA;MAAA,OAAAlH,mBAAA,GAAAuB,IAAA,UAAAgH,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA3C,IAAA,GAAA2C,SAAA,CAAAtE,IAAA;UAAA;YAAAsE,SAAA,CAAA3C,IAAA;YAAA2C,SAAA,CAAAtE,IAAA;YAAA,OAE1B6D,EAAE,CAACC,IAAI,CAACC,UAAU,CAAC,UAAU,EAAE;cAClDQ,MAAM,EAAE;gBAAC,eAAe,EAAEH;;aAC7B,CAAC;UAAA;YAFIpB,QAAQ,GAAAsB,SAAA,CAAA5E,IAAA;YAAA,OAAA4E,SAAA,CAAAzE,MAAA,WAGPmD,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;UAAA;YAAAsB,SAAA,CAAA3C,IAAA;YAAA2C,SAAA,CAAAN,EAAA,GAAAM,SAAA;YAEnCf,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAAgB,SAAA,CAAAN,EAAO,CAAC;YAAC,MAAAM,SAAA,CAAAN,EAAA;UAAA;UAAA;YAAA,OAAAM,SAAA,CAAAxC,IAAA;;SAAAqC,QAAA;KAGpD;IAAA,gBAVYF,kBAAkBA,CAAAO,GAAA;MAAA,OAAAN,KAAA,CAAA1B,KAAA,OAAAC,SAAA;;EAAA,GAU9B;AAED,EAAO,IAAMgC,aAAa;IAAA,IAAAC,KAAA,GAAA1F,YAAA,CAAA0D,gBAAA,eAAA5G,mBAAA,GAAAoF,IAAA,CAAG,SAAAyD,SAAOC,YAAY;MAAA,IAAA5B,QAAA,EAAA6B,IAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,OAAA;MAAA,OAAAlJ,mBAAA,GAAAuB,IAAA,UAAA4H,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAvD,IAAA,GAAAuD,SAAA,CAAAlF,IAAA;UAAA;YAAAkF,SAAA,CAAAlF,IAAA;YAAA,OACrBiE,kBAAkB,CAACW,YAAY,CAAC;UAAA;YAAjD5B,QAAQ,GAAAkC,SAAA,CAAAxF,IAAA;YACRmF,IAAI,GAAG7B,QAAQ,CAAC,CAAC,CAAC;YAAA,MAEpB,CAAC6B,IAAI,IAAI,CAACA,IAAI,CAAC,aAAa,CAAC,IAAI,CAACA,IAAI,CAAC,kBAAkB,CAAC;cAAAK,SAAA,CAAAlF,IAAA;cAAA;;YAAA,OAAAkF,SAAA,CAAArF,MAAA,WACnD,IAAI;UAAA;YAETiF,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC/CE,UAAU,GAAGF,IAAI,CAAC,aAAa,CAAC,GAAGA,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;YAAA,KAC7DD,YAAY,CAACS,QAAQ,CAAC,IAAI,CAAC;cAAAH,SAAA,CAAAlF,IAAA;cAAA;;YAAAkF,SAAA,CAAAlF,IAAA;YAAA,OACLsF,cAAc,CAACT,IAAI,CAAC,aAAa,CAAC,CAAC;UAAA;YAAnDG,OAAO,GAAAE,SAAA,CAAAxF,IAAA;YAAA,OAAAwF,SAAA,CAAArF,MAAA,WACN;cACH,MAAM,EAAEgF,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,GAAGA,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAGE,UAAU,GAAG,IAAI,GAAGH,YAAY;cACvF,MAAM,EAAEC,IAAI,CAAC,aAAa,CAAC;cAC3B,UAAU,EAAEC,QAAQ;cACpB,SAAS,EAAEE;aACd;UAAA;YAAA,OAAAE,SAAA,CAAArF,MAAA,WAEE;cACH,MAAM,EAAEgF,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,GAAGA,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAGE,UAAU,GAAG,IAAI,GAAGH,YAAY;cACvF,MAAM,EAAEC,IAAI,CAAC,aAAa,CAAC;cAC3B,UAAU,EAAEC;aACf;UAAA;UAAA;YAAA,OAAAI,SAAA,CAAApD,IAAA;;SAAA6C,QAAA;KACJ;IAAA,gBAvBYF,aAAaA,CAAAc,GAAA;MAAA,OAAAb,KAAA,CAAAlC,KAAA,OAAAC,SAAA;;EAAA,GAuBzB;AAED,EAAO,IAAM+C,YAAY;IAAA,IAAAC,KAAA,GAAAzG,YAAA,CAAA0D,gBAAA,eAAA5G,mBAAA,GAAAoF,IAAA,CAAG,SAAAwE;MAAA,OAAA5J,mBAAA,GAAAuB,IAAA,UAAAsI,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAjE,IAAA,GAAAiE,SAAA,CAAA5F,IAAA;UAAA;YAAA4F,SAAA,CAAA5F,IAAA;YAAA,OACXqC,YAAY,CAAC,gEAAgE,CAAC;UAAA;YAAA,OAAAuD,SAAA,CAAA/F,MAAA,WAAA+F,SAAA,CAAAlG,IAAA;UAAA;UAAA;YAAA,OAAAkG,SAAA,CAAA9D,IAAA;;SAAA4D,QAAA;KAC9F;IAAA,gBAFYF,YAAYA;MAAA,OAAAC,KAAA,CAAAjD,KAAA,OAAAC,SAAA;;EAAA,GAExB;AAED,EAAO,IAAMoD,YAAY;IAAA,IAAAC,KAAA,GAAA9G,YAAA,CAAA0D,gBAAA,eAAA5G,mBAAA,GAAAoF,IAAA,CAAG,SAAA6E;MAAA,IAAAC,OAAA,EAAAC,iBAAA,EAAAC,YAAA,EAAAC,QAAA,EAAAC,QAAA;MAAA,OAAAtK,mBAAA,GAAAuB,IAAA,UAAAgJ,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA3E,IAAA,GAAA2E,SAAA,CAAAtG,IAAA;UAAA;YAAAsG,SAAA,CAAAtG,IAAA;YAAA,OACFwD,eAAe,EAAE;UAAA;YAAjCwC,OAAO,GAAAM,SAAA,CAAA5G,IAAA;YAAA4G,SAAA,CAAAtG,IAAA;YAAA,OACmBqC,YAAY,CAAC,gEAAgE,CAAC;UAAA;YAAxG4D,iBAAiB,GAAAK,SAAA,CAAA5G,IAAA;YACjBwG,YAAY,GAAGK,eAAe,CAACN,iBAAiB,EAAED,OAAO,CAAC;YAAA,IAC3DE,YAAY;cAAAI,SAAA,CAAAtG,IAAA;cAAA;;YAAA,OAAAsG,SAAA,CAAAzG,MAAA,WACN,IAAI;UAAA;YAAAyG,SAAA,CAAAtG,IAAA;YAAA,OAEQyE,aAAa,CAACuB,OAAO,CAAC;UAAA;YAAvCG,QAAQ,GAAAG,SAAA,CAAA5G,IAAA;YAAA4G,SAAA,CAAAtG,IAAA;YAAA,OACOwG,eAAe,CAACN,YAAY,CAAC;UAAA;YAA9CE,QAAQ,GAAAE,SAAA,CAAA5G,IAAA;YAAA,IACP+G,KAAK,CAACC,OAAO,CAACN,QAAQ,CAAC;cAAAE,SAAA,CAAAtG,IAAA;cAAA;;YAAA,OAAAsG,SAAA,CAAAzG,MAAA,WAAA8G,aAAA,CAAAA,aAAA,KACbR,QAAQ;cAAES,QAAQ,EAAE,CAACR,QAAQ;;UAAC;YAAA,OAAAE,SAAA,CAAAzG,MAAA,WAAA8G,aAAA,CAAAA,aAAA,KAElCR,QAAQ;cAAES,QAAQ,EAAER;;UAAQ;UAAA;YAAA,OAAAE,SAAA,CAAAxE,IAAA;;SAAAiE,QAAA;KAC1C;IAAA,gBAbYF,YAAYA;MAAA,OAAAC,KAAA,CAAAtD,KAAA,OAAAC,SAAA;;EAAA,GAaxB;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,IAAM8D,eAAe,GAAG,SAAlBA,eAAeA,CAAIM,GAAG,EAAEC,MAAM,EAAK;;IAE5C,IAAID,GAAG,IAAIJ,KAAK,CAACC,OAAO,CAACG,GAAG,CAAC,EAAE;;MAE3B,IAAME,MAAM,GAAGF,GAAG,CAACxB,QAAQ,CAACyB,MAAM,CAAC,GAAGA,MAAM,GAAG,IAAI;MACnD,OAAOC,MAAM;;;;IAIjB,IAAIF,GAAG,IAAI7H,YAAA,WAAO6H,GAAG,MAAK,QAAQ,EAAE;;MAEhC,IAAI3K,MAAM,CAACsF,IAAI,CAACqF,GAAG,CAAC,CAACxB,QAAQ,CAACyB,MAAM,CAAC,EAAE;;QAEnC,OAAOD,GAAG,CAACC,MAAM,CAAC;;;;MAItB,KAAK,IAAME,IAAI,IAAIH,GAAG,EAAE;QACpB,IAAME,OAAM,GAAGR,eAAe,CAACM,GAAG,CAACG,IAAI,CAAC,EAAEF,MAAM,CAAC;;QAEjD,IAAIC,OAAM,EAAE;UACR,OAAOA,OAAM;;;;;IAKzB,OAAO,IAAI;EACf,CAAC;AAED,EAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIJ,GAAG,EAAEC,MAAM,EAAK;IAC7C,IAAID,GAAG,IAAIJ,KAAK,CAACC,OAAO,CAACG,GAAG,CAAC,EAAE;;MAE3B,OAAO,IAAI;;;IAGf,IAAIA,GAAG,IAAI7H,YAAA,WAAO6H,GAAG,MAAK,QAAQ,EAAE;;MAEhC,IAAI3K,MAAM,CAACsF,IAAI,CAACqF,GAAG,CAAC,CAACxB,QAAQ,CAACyB,MAAM,CAAC,EAAE;;QAEnC,OAAOL,KAAK,CAACC,OAAO,CAACG,GAAG,CAACC,MAAM,CAAC,CAAC,GAAGD,GAAG,CAACC,MAAM,CAAC,GAAG5K,MAAM,CAACsF,IAAI,CAACqF,GAAG,CAACC,MAAM,CAAC,CAAC;;;;MAI9E,KAAK,IAAME,IAAI,IAAIH,GAAG,EAAE;QACpB,IAAME,MAAM,GAAGE,gBAAgB,CAACJ,GAAG,CAACG,IAAI,CAAC,EAAEF,MAAM,CAAC;;QAElD,IAAIC,MAAM,KAAK,IAAI,EAAE;UACjB,OAAOA,MAAM;;;;;IAKzB,OAAO,IAAI;EACf,CAAC;AAGD,EAAO,IAAMP,eAAe;IAAA,IAAAU,KAAA,GAAAlI,YAAA,CAAA0D,gBAAA,eAAA5G,mBAAA,GAAAoF,IAAA,CAAG,SAAAiG,SAAOC,OAAO;MAAA,IAAAL,MAAA,EAAAM,SAAA,EAAAC,KAAA,EAAAN,IAAA,EAAAb,QAAA,EAAAoB,QAAA,EAAAC,EAAA,EAAAC,YAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAvB,QAAA,EAAAwB,SAAA;MAAA,OAAA9L,mBAAA,GAAAuB,IAAA,UAAAwK,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAnG,IAAA,GAAAmG,SAAA,CAAA9H,IAAA;UAAA;YAAA,MACrC,OAAOoH,OAAO,KAAK,QAAQ;cAAAU,SAAA,CAAA9H,IAAA;cAAA;;YAAA8H,SAAA,CAAA9H,IAAA;YAAA,OACdyE,aAAa,CAAC2C,OAAO,CAAC;UAAA;YAAA,OAAAU,SAAA,CAAAjI,MAAA,WAAAiI,SAAA,CAAApI,IAAA;UAAA;YAAA,KAC5B+G,KAAK,CAACC,OAAO,CAACU,OAAO,CAAC;cAAAU,SAAA,CAAA9H,IAAA;cAAA;;YACvB+G,MAAM,GAAG,EAAE;YAAAM,SAAA,GAAAU,0BAAA,CACEX,OAAO;YAAAU,SAAA,CAAAnG,IAAA;YAAA0F,SAAA,CAAApJ,CAAA;UAAA;YAAA,KAAAqJ,KAAA,GAAAD,SAAA,CAAAjL,CAAA,IAAAkD,IAAA;cAAAwI,SAAA,CAAA9H,IAAA;cAAA;;YAAfgH,IAAI,GAAAM,KAAA,CAAA9K,KAAA;YAAAsL,SAAA,CAAA9H,IAAA;YAAA,OACYyE,aAAa,CAACuC,IAAI,CAAC;UAAA;YAApCb,QAAQ,GAAA2B,SAAA,CAAApI,IAAA;YACd,IAAIyG,QAAQ,EAAE;cACVY,MAAM,CAACvG,IAAI,CAAC2F,QAAQ,CAAC;;UACxB;YAAA2B,SAAA,CAAA9H,IAAA;YAAA;UAAA;YAAA8H,SAAA,CAAA9H,IAAA;YAAA;UAAA;YAAA8H,SAAA,CAAAnG,IAAA;YAAAmG,SAAA,CAAA9D,EAAA,GAAA8D,SAAA;YAAAT,SAAA,CAAAtL,CAAA,CAAA+L,SAAA,CAAA9D,EAAA;UAAA;YAAA8D,SAAA,CAAAnG,IAAA;YAAA0F,SAAA,CAAArJ,CAAA;YAAA,OAAA8J,SAAA,CAAA5F,MAAA;UAAA;YAAA,OAAA4F,SAAA,CAAAjI,MAAA,WAEEkH,MAAM;UAAA;YAAA,MACN/H,YAAA,WAAOoI,OAAO,MAAK,QAAQ;cAAAU,SAAA,CAAA9H,IAAA;cAAA;;YAC5B+G,QAAM,GAAG,EAAE;YAAAS,EAAA,MAAAC,YAAA,GACEvL,MAAM,CAACsF,IAAI,CAAC4F,OAAO,CAAC;UAAA;YAAA,MAAAI,EAAA,GAAAC,YAAA,CAAA5G,MAAA;cAAAiH,SAAA,CAAA9H,IAAA;cAAA;;YAA5BgH,KAAI,GAAAS,YAAA,CAAAD,EAAA;YAAAM,SAAA,CAAA9H,IAAA;YAAA,OACWyE,aAAa,CAACuC,KAAI,CAAC;UAAA;YAAnCW,OAAO,GAAAG,SAAA,CAAApI,IAAA;YAAA,IACRiI,OAAO;cAAAG,SAAA,CAAA9H,IAAA;cAAA;;YAAA,OAAA8H,SAAA,CAAAjI,MAAA;UAAA;YAAAiI,SAAA,CAAA9H,IAAA;YAAA,OAGWwG,eAAe,CAACY,OAAO,CAACJ,KAAI,CAAC,CAAC;UAAA;YAA/CZ,QAAQ,GAAA0B,SAAA,CAAApI,IAAA;YACRyG,SAAQ,GAAAQ,aAAA,CAAAA,aAAA,KAAOgB,OAAO;cAAEf,QAAQ,EAAER;;YACxCW,QAAM,CAACvG,IAAI,CAAC2F,SAAQ,CAAC;UAAC;YAAAqB,EAAA;YAAAM,SAAA,CAAA9H,IAAA;YAAA;UAAA;YAAA,OAAA8H,SAAA,CAAAjI,MAAA,WAEnBkH,QAAM;UAAA;YAAA,OAAAe,SAAA,CAAAjI,MAAA,WAEV,IAAI;UAAA;UAAA;YAAA,OAAAiI,SAAA,CAAAhG,IAAA;;SAAAqF,QAAA;KACd;IAAA,gBA1BYX,eAAeA,CAAAwB,GAAA;MAAA,OAAAd,KAAA,CAAA1E,KAAA,OAAAC,SAAA;;EAAA,GA0B3B;AAED,EAAO,IAAM6C,cAAc;IAAA,IAAA2C,KAAA,GAAAjJ,YAAA,CAAA0D,gBAAA,eAAA5G,mBAAA,GAAAoF,IAAA,CAAG,SAAAgH,SAAOC,QAAQ;MAAA,IAAAnF,QAAA,EAAA+D,MAAA;MAAA,OAAAjL,mBAAA,GAAAuB,IAAA,UAAA+K,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA1G,IAAA,GAAA0G,SAAA,CAAArI,IAAA;UAAA;YAAAqI,SAAA,CAAA1G,IAAA;YAAA0G,SAAA,CAAArI,IAAA;YAAA,OAEd+C,KAAK,4CAAAG,MAAA,CAA4CiF,QAAQ,GAAI;cAChF5I,MAAM,EAAE;aACX,CAAC;UAAA;YAFIyD,QAAQ,GAAAqF,SAAA,CAAA3I,IAAA;YAAA2I,SAAA,CAAArI,IAAA;YAAA,OAGOgD,QAAQ,CAACI,IAAI,EAAE;UAAA;YAA9B2D,MAAM,GAAAsB,SAAA,CAAA3I,IAAA;YAAA,MACRqH,MAAM,CAACuB,IAAI,CAACzH,MAAM,GAAG,CAAC;cAAAwH,SAAA,CAAArI,IAAA;cAAA;;YAAA,OAAAqI,SAAA,CAAAxI,MAAA,WACfkH,MAAM,CAACuB,IAAI;UAAA;YAAA,OAAAD,SAAA,CAAAxI,MAAA,WAEf,EAAE;UAAA;YAAAwI,SAAA,CAAA1G,IAAA;YAAA0G,SAAA,CAAArE,EAAA,GAAAqE,SAAA;YAAA,OAAAA,SAAA,CAAAxI,MAAA,WAEF,IAAI;UAAA;UAAA;YAAA,OAAAwI,SAAA,CAAAvG,IAAA;;SAAAoG,QAAA;KAElB;IAAA,gBAbY5C,cAAcA,CAAAiD,GAAA;MAAA,OAAAN,KAAA,CAAAzF,KAAA,OAAAC,SAAA;;EAAA,GAa1B;;0LC3LD3G,qBAAA,YAAAA,+BAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,wBAAAa,gCAAAC,oCAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,YAAA,WAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,0CAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,kBAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,YAAA,WAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,gBAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,cAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,YAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,gBAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AADA,EAEA,IAAMyM,UAAU,GAAG,uBAAuB;EAC1C;EACA,IAAMC,0BAA0B,GAAG,CACjC,oCAAoC,EACpC,sBAAsB,EACtB,iCAAiC,EACjC,mCAAmC,EACnC,2CAA2C,EAC3C,sCAAsC,EACtC,QAAQ,CACT;AAED,EAAO,IAAMjF,iBAAe;IAAA,IAAAC,IAAA,GAAAzE,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAAwC;MAAA,IAAAV,QAAA,EAAAgD,OAAA;MAAA,OAAAlK,qBAAA,GAAAuB,IAAA,UAAAsG,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAjC,IAAA,GAAAiC,QAAA,CAAA5D,IAAA;UAAA;YAAA4D,QAAA,CAAAjC,IAAA;YAAAiC,QAAA,CAAA5D,IAAA;YAAA,OAEJ6D,EAAE,CAACC,IAAI,CAACC,UAAU,CAAC,aAAa,EAAE,EAAE,CAAC;UAAA;YAAtDf,QAAQ,GAAAY,QAAA,CAAAlE,IAAA;YACVsG,OAAO,GAAGhD,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC;YAC3D,IAAIyF,0BAA0B,CAACpD,QAAQ,CAACW,OAAO,CAAC,EAAE;cAChDA,OAAO,GAAG,UAAU;;YACrB,OAAApC,QAAA,CAAA/D,MAAA,WACMmG,OAAO;UAAA;YAAApC,QAAA,CAAAjC,IAAA;YAAAiC,QAAA,CAAAI,EAAA,GAAAJ,QAAA;YAEdL,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAAM,QAAA,CAAAI,EAAO,CAAC;YAAC,MAAAJ,QAAA,CAAAI,EAAA;UAAA;UAAA;YAAA,OAAAJ,QAAA,CAAA9B,IAAA;;SAAA4B,OAAA;KAGhD;IAAA,gBAZYF,kBAAeA;MAAA,OAAAC,IAAA,CAAAjB,KAAA,OAAAC,SAAA;;EAAA,GAY3B;AAED,EAAO,IAAMwB,oBAAkB;IAAA,IAAAC,KAAA,GAAAlF,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAAiD,SAAOC,gBAAgB;MAAA,IAAApB,QAAA;MAAA,OAAAlH,qBAAA,GAAAuB,IAAA,UAAAgH,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA3C,IAAA,GAAA2C,SAAA,CAAAtE,IAAA;UAAA;YAAAsE,SAAA,CAAA3C,IAAA;YAAA2C,SAAA,CAAAtE,IAAA;YAAA,OAE9B6D,EAAE,CAACC,IAAI,CAACC,UAAU,CAAC,UAAU,EAAE;cACpDQ,MAAM,EAAE;gBAAEmE,aAAa,EAAEtE;;aAC1B,CAAC;UAAA;YAFIpB,QAAQ,GAAAsB,SAAA,CAAA5E,IAAA;YAAA,OAAA4E,SAAA,CAAAzE,MAAA,WAGPmD,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;UAAA;YAAAsB,SAAA,CAAA3C,IAAA;YAAA2C,SAAA,CAAAN,EAAA,GAAAM,SAAA;YAEnCf,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAAgB,SAAA,CAAAN,EAAO,CAAC;YAAC,MAAAM,SAAA,CAAAN,EAAA;UAAA;UAAA;YAAA,OAAAM,SAAA,CAAAxC,IAAA;;SAAAqC,QAAA;KAGhD;IAAA,gBAVYF,qBAAkBA,CAAA3B,EAAA;MAAA,OAAA4B,KAAA,CAAA1B,KAAA,OAAAC,SAAA;;EAAA,GAU9B;AACD,EAAO,IAAMkG,kBAAkB;IAAA,IAAAjE,KAAA,GAAA1F,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAAyD,SAAOqB,OAAO;MAAA,IAAAhD,QAAA,EAAAmD,QAAA,EAAArB,QAAA,EAAAC,UAAA;MAAA,OAAAjJ,qBAAA,GAAAuB,IAAA,UAAA4H,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAvD,IAAA,GAAAuD,SAAA,CAAAlF,IAAA;UAAA;YAAAkF,SAAA,CAAAlF,IAAA;YAAA,OACvBiE,oBAAkB,CAAC+B,OAAO,CAAC;UAAA;YAA5ChD,QAAQ,GAAAkC,SAAA,CAAAxF,IAAA;YACRyG,QAAQ,GAAGnD,QAAQ,CAAC,CAAC,CAAC;YAAA,MACxB,CAACmD,QAAQ,IAAI,CAACA,QAAQ,CAAC,aAAa,CAAC,IAAI,CAACA,QAAQ,CAAC,kBAAkB,CAAC;cAAAjB,SAAA,CAAAlF,IAAA;cAAA;;YAAA,OAAAkF,SAAA,CAAArF,MAAA,WACjE,IAAI;UAAA;YAEPiF,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC/CE,UAAU,GAAGoB,QAAQ,CAAC,aAAa,CAAC,GAAGA,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE;YAAA,OAAAjB,SAAA,CAAArF,MAAA,WAClE;cACLoB,IAAI,EACFkF,QAAQ,CAAC,WAAW,CAAC,GACrB,GAAG,GACHA,QAAQ,CAAC,MAAM,CAAC,GAChB,GAAG,GACHpB,UAAU,GACV,IAAI,GACJiB,OAAO;cACT4C,IAAI,EAAEzC,QAAQ,CAAC,aAAa,CAAC;cAC7BrB,QAAQ,EAAEA;aACX;UAAA;UAAA;YAAA,OAAAI,SAAA,CAAApD,IAAA;;SAAA6C,QAAA;KACF;IAAA,gBApBYgE,kBAAkBA,CAAAnE,GAAA;MAAA,OAAAE,KAAA,CAAAlC,KAAA,OAAAC,SAAA;;EAAA,GAoB9B;AAED,EAAO,IAAMoG,cAAc;IAAA,IAAApD,KAAA,GAAAzG,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAAwE,SAAOoD,UAAU;MAAA,IAAA9F,QAAA,EAAA+F,MAAA,EAAAC,WAAA;MAAA,OAAAlN,qBAAA,GAAAuB,IAAA,UAAAsI,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAjE,IAAA,GAAAiE,SAAA,CAAA5F,IAAA;UAAA;YAAA4F,SAAA,CAAA5F,IAAA;YAAA,OACtB6D,EAAE,CAACC,IAAI,CAACC,UAAU,CAAC,aAAa,EAAE,EAAE,CAAC;UAAA;YAAtDf,QAAQ,GAAA4C,SAAA,CAAAlG,IAAA;YACRqJ,MAAM,GAAG/F,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;YAC3CgG,WAAW,GAAG,IAAIC,IAAI,EAAE;YAAA,OAAArD,SAAA,CAAA/F,MAAA,WAE5BkJ,MAAM,GACND,UAAU,GACVE,WAAW,CAACE,WAAW,EAAE,GACzBF,WAAW,CAACG,QAAQ,EAAE,GACtBH,WAAW,CAACI,MAAM,EAAE,GACpBJ,WAAW,CAACK,OAAO,EAAE;UAAA;UAAA;YAAA,OAAAzD,SAAA,CAAA9D,IAAA;;SAAA4D,QAAA;KAExB;IAAA,gBAZYmD,cAAcA,CAAAtD,GAAA;MAAA,OAAAE,KAAA,CAAAjD,KAAA,OAAAC,SAAA;;EAAA,GAY1B;AACD,EAAO,IAAM6G,eAAe;IAAA,IAAAxD,KAAA,GAAA9G,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAA6E,SAAOwD,GAAG,EAAEC,QAAQ;MAAA,IAAAC,SAAA,EAAAC,QAAA,EAAAC,UAAA,EAAA3G,QAAA;MAAA,OAAAlH,qBAAA,GAAAuB,IAAA,UAAAgJ,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA3E,IAAA,GAAA2E,SAAA,CAAAtG,IAAA;UAAA;YAAAsG,SAAA,CAAAtG,IAAA;YAAA,OACzB4J,aAAa,EAAE;UAAA;YAAjCH,SAAS,GAAAnD,SAAA,CAAA5G,IAAA;YACTgK,QAAQ,GAAG,IAAIG,QAAQ,EAAE;YACzBF,UAAU,GAAG,IAAIG,aAAa,EAAE;YACtCJ,QAAQ,CAACK,MAAM,CAAC,KAAK,EAAEJ,UAAU,CAACK,iBAAiB,CAACT,GAAG,CAAC,CAAC;YACzDG,QAAQ,CAACK,MAAM,CAAC,UAAU,EAAEP,QAAQ,CAAC;YACrCE,QAAQ,CAACK,MAAM,CAAC,WAAW,EAAEN,SAAS,CAAC;YAACnD,SAAA,CAAAtG,IAAA;YAAA,OAEjB+C,KAAK,CAACyF,UAAU,GAAG,kBAAkB,EAAE;cAC5DjJ,MAAM,EAAE,MAAM;cACd+I,IAAI,EAAEoB;aACP,CAAC;UAAA;YAHI1G,QAAQ,GAAAsD,SAAA,CAAA5G,IAAA;YAAA,OAAA4G,SAAA,CAAAzG,MAAA,WAIPmD,QAAQ,CAACiH,IAAI,EAAE;UAAA;UAAA;YAAA,OAAA3D,SAAA,CAAAxE,IAAA;;SAAAiE,QAAA;KACvB;IAAA,gBAbYuD,eAAeA,CAAAtB,GAAA,EAAAO,GAAA;MAAA,OAAAzC,KAAA,CAAAtD,KAAA,OAAAC,SAAA;;EAAA,GAa3B;AAED,EAAO,IAAMyH,kBAAkB;IAAA,IAAAhD,KAAA,GAAAlI,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAAiG,SAAOgD,MAAM;MAAA,OAAArO,qBAAA,GAAAuB,IAAA,UAAAwK,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAnG,IAAA,GAAAmG,SAAA,CAAA9H,IAAA;UAAA;YAC7C6D,EAAE,CAACC,IAAI,CAACC,UAAU,CAAC,eAAe,EAAE;cAAEqG,EAAE,EAAED;aAAQ,EAAE,UAAUpD,MAAM,EAAE;cACpE,IAAIA,MAAM,CAACzD,KAAK,EAAE,EAAE;gBAClBC,OAAO,CAAC8G,GAAG,CAACtD,MAAM,CAACzD,KAAK,EAAE,CAAC;eAC5B,MAAM;gBACLC,OAAO,CAAC8G,GAAG,CAACtD,MAAM,CAAC1D,IAAI,EAAE,CAAC;gBAC1B,IAAML,QAAQ,GAAG+D,MAAM,CAAC1D,IAAI,EAAE;gBAC9B,IAAMiH,GAAG,GAAGtH,QAAQ,CAAC,cAAc,CAAC;gBACpC,IAAMuH,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;gBACxCF,IAAI,CAACG,IAAI,GAAGJ,GAAG;gBACfC,IAAI,CAACI,QAAQ,GAAG3H,QAAQ,CAAC,MAAM,CAAC;gBAChCwH,QAAQ,CAAClC,IAAI,CAACsC,WAAW,CAACL,IAAI,CAAC;gBAC/BA,IAAI,CAACM,KAAK,EAAE;gBACZC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACV,GAAG,CAAC;;aAElC,CAAC;UAAC;UAAA;YAAA,OAAAxC,SAAA,CAAAhG,IAAA;;SAAAqF,QAAA;KACJ;IAAA,gBAhBY+C,kBAAkBA,CAAAe,GAAA;MAAA,OAAA/D,KAAA,CAAA1E,KAAA,OAAAC,SAAA;;EAAA,GAgB9B;AAED,EAAO,IAAMyI,QAAQ;IAAA,IAAAjD,KAAA,GAAAjJ,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAAgH,SAAOiC,MAAM;MAAA,IAAAgB,UAAA,EAAAC,aAAA;MAAA,OAAAtP,qBAAA,GAAAuB,IAAA,UAAA+K,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA1G,IAAA,GAAA0G,SAAA,CAAArI,IAAA;UAAA;YAC/BmL,UAAU,GAAGtH,EAAE,CAACwH,IAAI,CAACC,aAAa,CAAC,gCAAgC,EAAE;cACvEC,MAAM,EAAE,sCAAsC;cAC9CC,WAAW,EAAE,YAAY;cACzBC,QAAQ,EAAEtB,MAAM;cAChBuB,gBAAgB,EAAE,CAAC;cACnBC,SAAS,EAAE,CAAC;cACZC,MAAM,EAAE,GAAG;cACXC,WAAW,EAAE;aACd,CAAC;YAEIT,aAAa,GAAGvH,EAAE,CAACiI,SAAS,CAACC,QAAQ,CAACC,iBAAiB,CAAClB,MAAM,CAAC;YACrE,IAAI,CAACM,aAAa,EAAE;cAClBvH,EAAE,CAACiI,SAAS,CAACC,QAAQ,CAACE,IAAI,CAACd,UAAU,EAAE;gBACrCe,KAAK,EAAE,MAAM;gBACbC,SAAS,EAAE,KAAK;gBAChBC,kBAAkB,EAAE,KAAK;gBACzB/I,IAAI,EAAE;kBACJgJ,cAAc,EAAE;;eAEnB,CAAC;aACH,MAAM;cACLjB,aAAa,CAACkB,UAAU,CACtB,eAAe,GAAGnB,UAAU,GAAG,wCACjC,CAAC;cACDC,aAAa,CAACmB,QAAQ,CAAC,oBAAoB,CAAC;;UAC7C;UAAA;YAAA,OAAAlE,SAAA,CAAAvG,IAAA;;SAAAoG,QAAA;KACF;IAAA,gBA3BYgD,QAAQA,CAAAsB,GAAA;MAAA,OAAAvE,KAAA,CAAAzF,KAAA,OAAAC,SAAA;;EAAA,GA2BpB;AAED,EAAO,IAAM6C,gBAAc;IAAA,IAAAmH,KAAA,GAAAzN,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAAyB,SAAOwF,QAAQ;MAAA,IAAAnF,QAAA,EAAA+D,MAAA;MAAA,OAAAjL,qBAAA,GAAAuB,IAAA,UAAAwF,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAnB,IAAA,GAAAmB,SAAA,CAAA9C,IAAA;UAAA;YAAA8C,SAAA,CAAAnB,IAAA;YAAAmB,SAAA,CAAA9C,IAAA;YAAA,OAElB+C,KAAK,CAC1ByF,UAAU,yBAAAtF,MAAA,CAAyBiF,QAAQ,CAAE,EAC7C;cACE5I,MAAM,EAAE;aAEZ,CAAC;UAAA;YALKyD,QAAQ,GAAAF,SAAA,CAAApD,IAAA;YAAAoD,SAAA,CAAA9C,IAAA;YAAA,OAMOgD,QAAQ,CAACI,IAAI,EAAE;UAAA;YAA9B2D,MAAM,GAAAjE,SAAA,CAAApD,IAAA;YAAA,MACRqH,MAAM,CAACuB,IAAI,CAACzH,MAAM,GAAG,CAAC;cAAAiC,SAAA,CAAA9C,IAAA;cAAA;;YAAA,OAAA8C,SAAA,CAAAjD,MAAA,WACjBkH,MAAM,CAACuB,IAAI;UAAA;YAAA,OAAAxF,SAAA,CAAAjD,MAAA,WAEb,EAAE;UAAA;YAAAiD,SAAA,CAAAnB,IAAA;YAAAmB,SAAA,CAAAkB,EAAA,GAAAlB,SAAA;YAAA,OAAAA,SAAA,CAAAjD,MAAA,WAEF,IAAI;UAAA;UAAA;YAAA,OAAAiD,SAAA,CAAAhB,IAAA;;SAAAa,QAAA;KAEd;IAAA,gBAhBY2C,iBAAcA,CAAAoH,GAAA;MAAA,OAAAD,KAAA,CAAAjK,KAAA,OAAAC,SAAA;;EAAA,GAgB1B;AAED,EAAO,IAAM+C,cAAY;IAAA,IAAAmH,KAAA,GAAA3N,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAA0L;MAAA,OAAA9Q,qBAAA,GAAAuB,IAAA,UAAAwP,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAnL,IAAA,GAAAmL,SAAA,CAAA9M,IAAA;UAAA;YAAA8M,SAAA,CAAA9M,IAAA;YAAA,OACbqC,YAAY,CACvB,gEACF,CAAC;UAAA;YAAA,OAAAyK,SAAA,CAAAjN,MAAA,WAAAiN,SAAA,CAAApN,IAAA;UAAA;UAAA;YAAA,OAAAoN,SAAA,CAAAhL,IAAA;;SAAA8K,QAAA;KACF;IAAA,gBAJYpH,eAAYA;MAAA,OAAAmH,KAAA,CAAAnK,KAAA,OAAAC,SAAA;;EAAA,GAIxB;AAED,EAAO,IAAMmH,aAAa;IAAA,IAAAmD,MAAA,GAAA/N,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAA8L;MAAA,IAAAhK,QAAA,EAAA+F,MAAA,EAAAkE,SAAA;MAAA,OAAAnR,qBAAA,GAAAuB,IAAA,UAAA6P,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAAxL,IAAA,GAAAwL,UAAA,CAAAnN,IAAA;UAAA;YAAAmN,UAAA,CAAAnN,IAAA;YAAA,OACJ6D,EAAE,CAACC,IAAI,CAACC,UAAU,CAAC,aAAa,EAAE,EAAE,CAAC;UAAA;YAAtDf,QAAQ,GAAAmK,UAAA,CAAAzN,IAAA;YACVqJ,MAAM,GAAG/F,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;YAAAmK,UAAA,CAAAnN,IAAA;YAAA,OACvB6D,EAAE,CAACC,IAAI,CAACC,UAAU,CAAC,sBAAsB,EAAE;cACjEQ,MAAM,EAAE;gBACN6I,SAAS,EAAErE;;aAEd,CAAC;UAAA;YAJIkE,SAAS,GAAAE,UAAA,CAAAzN,IAAA;YAAA,OAAAyN,UAAA,CAAAtN,MAAA,WAKRoN,SAAS,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;UAAA;UAAA;YAAA,OAAAE,UAAA,CAAArL,IAAA;;SAAAkL,SAAA;KAC9C;IAAA,gBATYpD,aAAaA;MAAA,OAAAmD,MAAA,CAAAvK,KAAA,OAAAC,SAAA;;EAAA,GASzB;AAED,EAAO,IAAM4K,kBAAkB;IAAA,IAAAC,MAAA,GAAAtO,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,CAAG,SAAAqM;MAAA,IAAAvK,QAAA;MAAA,OAAAlH,qBAAA,GAAAuB,IAAA,UAAAmQ,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAA9L,IAAA,GAAA8L,UAAA,CAAAzN,IAAA;UAAA;YAAAyN,UAAA,CAAAzN,IAAA;YAAA,OACT+C,KAAK,CAAC2K,MAAM,GAAG,sBAAsB,EAAE;cAC5DnO,MAAM,EAAE;aACT,CAAC;UAAA;YAFIyD,QAAQ,GAAAyK,UAAA,CAAA/N,IAAA;YAAA,OAAA+N,UAAA,CAAA5N,MAAA,WAGPmD,QAAQ,CAACI,IAAI,EAAE;UAAA;UAAA;YAAA,OAAAqK,UAAA,CAAA3L,IAAA;;SAAAyL,SAAA;KACvB;IAAA,gBALYF,kBAAkBA;MAAA,OAAAC,MAAA,CAAA9K,KAAA,OAAAC,SAAA;;EAAA,GAK9B;;;;;;;0LC/KD3G,qBAAA,YAAAA,+BAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,wBAAAa,gCAAAC,oCAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,YAAA,WAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,0CAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,kBAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,YAAA,WAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,gBAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,cAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,YAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,gBAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AADA,EAWO,IAAM4R,eAAe,GAAGC,yBAAW,CAAC,SAAS,EAAE;IACpDC,KAAK,EAAE,SAAAA;MAAA,OAAO;QACZC,SAAS,EAAE,IAAI;QACfC,aAAa,EAAE,IAAI;QACnBnJ,YAAY,EAAE,IAAI;QAClBoJ,SAAS,EAAE,IAAI;QACfC,WAAW,EAAE,KAAK;QAClBC,UAAU,EAAE,IAAI;QAChBC,kBAAkB,EAAE,IAAI;QACxB7K,KAAK,EAAE,IAAI;QACX8K,kBAAkB,EAAE,IAAI;;;;QAIxBC,gBAAgB,EAAE,IAAI;;;QAGtBC,kBAAkB,EAAE,IAAI;QACxBC,eAAe,EAAE,IAAI;QACrBC,kBAAkB,EAAE;OACrB;KAAC;IACFC,OAAO,EAAE;MACPC,YAAY,WAAAA,aAAClS,KAAK,EAAE;QAClB,IAAI,CAACsR,SAAS,GAAGtR,KAAK;OACvB;MACDmS,kBAAkB,WAAAA,mBAACnS,KAAK,EAAE;QACxB,IAAI,CAACoS,eAAe,GAAGpS,KAAK;OAC7B;MACKqS,eAAe,WAAAA,kBAAG;QAAA,IAAAC,KAAA;QAAA,OAAA9P,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAAwC;UAAA,OAAA5H,qBAAA,GAAAuB,IAAA,UAAAsG,SAAAC,QAAA;YAAA,kBAAAA,QAAA,CAAAjC,IAAA,GAAAiC,QAAA,CAAA5D,IAAA;cAAA;gBAAA4D,QAAA,CAAA5D,IAAA;gBAAA,OACIwD,iBAAe,EAAE;cAAA;gBAA3CsL,KAAI,CAAClK,YAAY,GAAAhB,QAAA,CAAAlE,IAAA;cAAA;cAAA;gBAAA,OAAAkE,QAAA,CAAA9B,IAAA;;aAAA4B,OAAA;;OAClB;MACDqL,YAAY,WAAAA,aAACvS,KAAK,EAAE;QAClB,IAAI,CAACwR,SAAS,GAAGxR,KAAK;OACvB;MACDwS,eAAe,WAAAA,gBAACxS,KAAK,EAAE;QACrB,IAAI,CAAC2R,kBAAkB,GAAGc,aAAa,CAACzS,KAAK,CAAC;QAC9C,IAAI,CAAC0R,UAAU,GAAG1R,KAAK;QACvB,IAAI,CAAC0S,WAAW,EAAE;OACnB;MACDC,kBAAkB,WAAAA,mBAAC3F,QAAQ,EAAE;QAC3B,IAAI,CAAC+E,eAAe,GAAG/E,QAAQ;OAChC;MACD0F,WAAW,WAAAA,cAAG;QACZ,IAAI,CAACjB,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;OACrC;MACDmB,YAAY,WAAAA,aAACC,SAAS,EAAEC,WAAW,EAAE;QACnC,IAAI,CAAChB,kBAAkB,GAAGgB,WAAW;QACrC,IAAI,CAACC,WAAW,GAAG,CAAC;QACpB,IAAMC,SAAS,GAAGH,SAAS,CAACxO,MAAM,GAAG,IAAI,CAAC4O,QAAQ;;QAElD,IAAI,CAACpB,gBAAgB,GAAGgB,SAAS;OAClC;MACDK,kBAAkB,WAAAA,mBAACC,OAAO,EAAE;QAC1B,IAAI,CAACJ,WAAW,GAAGI,OAAO;QAC1B,IAAMC,UAAU,GAAG,IAAI,CAACH,QAAQ,GAAGE,OAAO;QAC1C,IAAIA,OAAO,KAAK,IAAI,CAACE,UAAU,EAAE;UAC/B,IAAMC,SAAS,GAAG,IAAI,CAACC,YAAY,CAAClP,MAAM;UAC1C,IAAI,CAACwN,gBAAgB,GAAG,IAAI,CAAC0B,YAAY,CAAClO,KAAK,CAAC+N,UAAU,EAAEE,SAAS,CAAC;UACtE;;QAEF,IAAME,QAAQ,GAAGJ,UAAU,GAAG,IAAI,CAACH,QAAQ;QAC3C,IAAI,CAACpB,gBAAgB,GAAG,IAAI,CAAC0B,YAAY,CAAClO,KAAK,CAAC+N,UAAU,EAAEI,QAAQ,CAAC;OACtE;MACDC,gBAAgB,WAAAA,mBAAG;QACjB,IAAI,CAAC9B,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAACD,UAAU,GAAG,IAAI;QACtB,IAAI,CAACD,WAAW,GAAG,KAAK;OACzB;MACKiC,QAAQ,WAAAA,SAACC,KAAK,EAAE;QAAA,IAAAC,MAAA;QAAA,OAAApR,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAAiD;UAAA,OAAArI,qBAAA,GAAAuB,IAAA,UAAAgH,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA3C,IAAA,GAAA2C,SAAA,CAAAtE,IAAA;cAAA;gBAAA,KAChB,CAAC,UAAU,EAAE,SAAS,CAAC,CAACqF,QAAQ,CAAC8K,KAAK,CAAC;kBAAA7L,SAAA,CAAAtE,IAAA;kBAAA;;gBAAAsE,SAAA,CAAAtE,IAAA;gBAAA,OACnCoQ,MAAI,CAACC,gBAAgB,EAAE;cAAA;gBAAA/L,SAAA,CAAAtE,IAAA;gBAAA;cAAA;gBAAAsE,SAAA,CAAAtE,IAAA;gBAAA,OAEvBoQ,MAAI,CAACE,eAAe,EAAE;cAAA;cAAA;gBAAA,OAAAhM,SAAA,CAAAxC,IAAA;;aAAAqC,QAAA;;OAE/B;MACKmM,eAAe,WAAAA,kBAAiB;QAAA,IAAAC,UAAA,GAAA9N,SAAA;UAAA+N,MAAA;QAAA,OAAAxR,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAAyD;UAAA,IAAAqB,OAAA;UAAA,OAAAlK,qBAAA,GAAAuB,IAAA,UAAA4H,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAvD,IAAA,GAAAuD,SAAA,CAAAlF,IAAA;cAAA;gBAAhBgG,OAAO,GAAAuK,UAAA,CAAA1P,MAAA,QAAA0P,UAAA,QAAAE,SAAA,GAAAF,UAAA,MAAG,IAAI;gBAAA,MAC9BvK,OAAO,KAAK,IAAI;kBAAAd,SAAA,CAAAlF,IAAA;kBAAA;;gBAAAkF,SAAA,CAAAlF,IAAA;gBAAA,OACFwD,iBAAe,EAAE;cAAA;gBAAjCwC,OAAO,GAAAd,SAAA,CAAAxF,IAAA;cAAA;gBAAAwF,SAAA,CAAAlF,IAAA;gBAAA,OAEkB2I,kBAAkB,CAAC3C,OAAO,CAAC;cAAA;gBAAtDwK,MAAI,CAACzC,aAAa,GAAA7I,SAAA,CAAAxF,IAAA;cAAA;cAAA;gBAAA,OAAAwF,SAAA,CAAApD,IAAA;;aAAA6C,QAAA;;OACnB;MACK+L,gBAAgB,WAAAA,iBAACC,WAAW,EAAE/H,IAAI,EAAE;QAAA,IAAAgI,MAAA;QAAA,OAAA5R,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAAwE;UAAA,IAAAmL,SAAA;UAAA,OAAA/U,qBAAA,GAAAuB,IAAA,UAAAsI,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAjE,IAAA,GAAAiE,SAAA,CAAA5F,IAAA;cAAA;gBAClC6Q,SAAS,GAAGD,MAAI,CAACE,YAAY,CAACF,MAAI,CAAC7C,aAAa,EAAE4C,WAAW,CAAC;gBAAA/K,SAAA,CAAA5F,IAAA;gBAAA,OAC1CsF,gBAAc,CAACsD,IAAI,CAAC;cAAA;gBAA9CiI,SAAS,CAAC7L,OAAO,GAAAY,SAAA,CAAAlG,IAAA;cAAA;cAAA;gBAAA,OAAAkG,SAAA,CAAA9D,IAAA;;aAAA4D,QAAA;;OAClB;MACKqL,aAAa,WAAAA,gBAAgC;QAAA,IAAAC,WAAA,GAAAvO,SAAA;UAAAwO,MAAA;QAAA,OAAAjS,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAA6E;UAAA,IAAAC,OAAA,EAAAc,MAAA,EAAAoK,UAAA,EAAAlM,OAAA,EAAA6L,SAAA,EAAAM,SAAA,EAAAC,IAAA,EAAA/J,SAAA,EAAAC,KAAA,EAAA+J,KAAA;UAAA,OAAAvV,qBAAA,GAAAuB,IAAA,UAAAgJ,UAAAyB,SAAA;YAAA,kBAAAA,SAAA,CAAAnG,IAAA,GAAAmG,SAAA,CAAA9H,IAAA;cAAA;gBAA/BgG,OAAO,GAAAgL,WAAA,CAAAnQ,MAAA,QAAAmQ,WAAA,QAAAP,SAAA,GAAAO,WAAA,MAAG,IAAI;gBAAElK,MAAM,GAAAkK,WAAA,CAAAnQ,MAAA,QAAAmQ,WAAA,QAAAP,SAAA,GAAAO,WAAA,MAAG,IAAI;gBAAA,IAC1ChL,OAAO;kBAAA8B,SAAA,CAAA9H,IAAA;kBAAA;;gBAAA8H,SAAA,CAAA9H,IAAA;gBAAA,OACMwD,iBAAe,EAAE;cAAA;gBAAjCwC,OAAO,GAAA8B,SAAA,CAAApI,IAAA;cAAA;gBAAA,MAGLuR,MAAI,CAAClD,aAAa,KAAK,IAAI;kBAAAjG,SAAA,CAAA9H,IAAA;kBAAA;;gBAAA8H,SAAA,CAAA9H,IAAA;gBAAA,OACF2I,kBAAkB,CAAC3C,OAAO,CAAC;cAAA;gBAAtDiL,MAAI,CAAClD,aAAa,GAAAjG,SAAA,CAAApI,IAAA;gBAAAoI,SAAA,CAAA9H,IAAA;gBAAA,OAEOwD,iBAAe,EAAE;cAAA;gBAApC0N,UAAU,GAAApJ,SAAA,CAAApI,IAAA;gBAAA,MACZwR,UAAU,CAAC7L,QAAQ,CAAC,IAAI,CAAC,IAAI,CAACyB,MAAM;kBAAAgB,SAAA,CAAA9H,IAAA;kBAAA;;gBAAA8H,SAAA,CAAA9H,IAAA;gBAAA,OAChBsF,gBAAc,CAAC2L,MAAI,CAAClD,aAAa,CAAC,MAAM,CAAC,CAAC;cAAA;gBAA1D/I,OAAO,GAAA8C,SAAA,CAAApI,IAAA;gBACbuR,MAAI,CAAClD,aAAa,CAAC,UAAU,CAAC,GAAG,CAAApH,eAAA,CAAAA,eAAA,KAAMsK,MAAI,CAAClD,aAAa;kBAAE/I,OAAO,EAAPA;mBAAU;cAAC;gBAItE6L,SAAS,GAAGI,MAAI,CAAClD,aAAa;gBAClC,IAAIjH,MAAM,EAAE;kBACV+J,SAAS,GAAGI,MAAI,CAACH,YAAY,CAACG,MAAI,CAAClD,aAAa,EAAEjH,MAAM,CAAC,IAAI+J,SAAS;;gBACvE/I,SAAA,CAAA9H,IAAA;gBAAA,OAEuBwF,cAAY,EAAE;cAAA;gBAAhC2L,SAAS,GAAArJ,SAAA,CAAApI,IAAA;gBACT0R,IAAI,GAAGnK,gBAAgB,CAACkK,SAAS,EAAEnL,OAAO,CAAC;gBAAA,MAE7CoL,IAAI,IAAIA,IAAI,CAACvQ,MAAM,GAAG,CAAC;kBAAAiH,SAAA,CAAA9H,IAAA;kBAAA;;gBAAAqH,SAAA,GAAAU,4BAAA,CACNqJ,IAAI;gBAAAtJ,SAAA,CAAAnG,IAAA;gBAAA0P,KAAA,gBAAAvV,qBAAA,GAAAoF,IAAA,UAAAmQ;kBAAA,IAAArK,IAAA,EAAAsK,SAAA,EAAAC,KAAA;kBAAA,OAAAzV,qBAAA,GAAAuB,IAAA,UAAAmU,OAAAlL,SAAA;oBAAA,kBAAAA,SAAA,CAAA3E,IAAA,GAAA2E,SAAA,CAAAtG,IAAA;sBAAA;wBAAZgH,IAAI,GAAAM,KAAA,CAAA9K,KAAA;wBAAA8J,SAAA,CAAAtG,IAAA;wBAAA,OACW2I,kBAAkB,CAAC3B,IAAI,CAAC;sBAAA;wBAA1CsK,SAAS,GAAAhL,SAAA,CAAA5G,IAAA;wBAAA,IACV4R,SAAS;0BAAAhL,SAAA,CAAAtG,IAAA;0BAAA;;wBAAA,OAAAsG,SAAA,CAAAzG,MAAA;sBAAA;wBAGd,IAAI,CAACgR,SAAS,CAACjK,QAAQ,EAAE;0BACvBiK,SAAS,CAACjK,QAAQ,GAAG,EAAE;;wBAEnB2K,KAAK,GAAGV,SAAS,CAACjK,QAAQ,CAAC6K,IAAI,CACnC,UAACC,OAAO;0BAAA,OAAKA,OAAO,CAACzQ,IAAI,KAAKqQ,SAAS,CAACrQ,IAAI;yBAC9C,CAAC;wBACD,IAAI,CAACsQ,KAAK,EAAE;0BACVV,SAAS,CAACjK,QAAQ,CAACpG,IAAI,CAAC8Q,SAAS,CAAC;;wBAEpC,IAAItK,IAAI,CAAC3B,QAAQ,CAAC,IAAI,CAAC,EAAE;0BACvB4L,MAAI,CAACP,gBAAgB,CAACY,SAAS,CAACrQ,IAAI,EAAEqQ,SAAS,CAAC1I,IAAI,CAAC;;wBACtDtC,SAAA,CAAAtG,IAAA;wBAAA,OACKiR,MAAI,CAACF,aAAa,CAAC/J,IAAI,EAAEsK,SAAS,CAACrQ,IAAI,CAAC;sBAAA;sBAAA;wBAAA,OAAAqF,SAAA,CAAAxE,IAAA;;qBAAAuP,KAAA;;gBAAAhK,SAAA,CAAApJ,CAAA;cAAA;gBAAA,KAAAqJ,KAAA,GAAAD,SAAA,CAAAjL,CAAA,IAAAkD,IAAA;kBAAAwI,SAAA,CAAA9H,IAAA;kBAAA;;gBAAA,OAAA8H,SAAA,CAAA1F,aAAA,CAAAiP,KAAA;cAAA;gBAAA,KAAAvJ,SAAA,CAAA9D,EAAA;kBAAA8D,SAAA,CAAA9H,IAAA;kBAAA;;gBAAA,OAAA8H,SAAA,CAAAjI,MAAA;cAAA;gBAAAiI,SAAA,CAAA9H,IAAA;gBAAA;cAAA;gBAAA8H,SAAA,CAAA9H,IAAA;gBAAA;cAAA;gBAAA8H,SAAA,CAAAnG,IAAA;gBAAAmG,SAAA,CAAA6J,EAAA,GAAA7J,SAAA;gBAAAT,SAAA,CAAAtL,CAAA,CAAA+L,SAAA,CAAA6J,EAAA;cAAA;gBAAA7J,SAAA,CAAAnG,IAAA;gBAAA0F,SAAA,CAAArJ,CAAA;gBAAA,OAAA8J,SAAA,CAAA5F,MAAA;cAAA;cAAA;gBAAA,OAAA4F,SAAA,CAAAhG,IAAA;;aAAAiE,QAAA;;OAGnD;MACK6L,qBAAqB,WAAAA,wBAAG;QAAA,IAAAC,MAAA;QAAA,OAAA7S,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAAiG;UAAA,OAAArL,qBAAA,GAAAuB,IAAA,UAAAwK,UAAAQ,SAAA;YAAA,kBAAAA,SAAA,CAAA1G,IAAA,GAAA0G,SAAA,CAAArI,IAAA;cAAA;gBAAAqI,SAAA,CAAArI,IAAA;gBAAA,OACIwF,cAAY,EAAE;cAAA;gBAA9CqM,MAAI,CAACzD,kBAAkB,GAAA/F,SAAA,CAAA3I,IAAA;cAAA;cAAA;gBAAA,OAAA2I,SAAA,CAAAvG,IAAA;;aAAAqF,QAAA;;OACxB;MACD2J,YAAY,WAAAA,aAACzN,IAAI,EAAEpC,IAAI,EAAE;QACvB,IAAIjC,YAAA,WAAOqE,IAAI,MAAK,QAAQ,EAAE;UAC5B,IAAIA,IAAI,CAACpC,IAAI,KAAKA,IAAI,EAAE;YACtB,OAAOoC,IAAI;;UAEb,IAAIA,IAAI,CAACuD,QAAQ,IAAIH,KAAK,CAACC,OAAO,CAACrD,IAAI,CAACuD,QAAQ,CAAC,EAAE;YAAA,IAAAkL,UAAA,GAAA/J,4BAAA,CAC3B1E,IAAI,CAACuD,QAAQ;cAAAmL,MAAA;YAAA;cAAnC,KAAAD,UAAA,CAAA7T,CAAA,MAAA8T,MAAA,GAAAD,UAAA,CAAA1V,CAAA,IAAAkD,IAAA,GAAqC;gBAAA,IAA1BoS,OAAO,GAAAK,MAAA,CAAAvV,KAAA;gBAChB,IAAMwV,SAAS,GAAG,IAAI,CAAClB,YAAY,CAACY,OAAO,EAAEzQ,IAAI,CAAC;gBAClD,IAAI+Q,SAAS,KAAK,IAAI,EAAE;kBACtB,OAAOA,SAAS;;;qBAEnBC,GAAA;cAAAH,UAAA,CAAA/V,CAAA,CAAAkW,GAAA;;cAAAH,UAAA,CAAA9T,CAAA;;;;QAGL,OAAO,IAAI;;;EAGjB,CAAC,CAAC;;EC5JK,IAAMkU,YAAY,GAAG;IACxBC,KAAK,EAAE;MACHC,QAAQ,EAAE;QACNzU,IAAI,EAAE0U,MAAM;QACZC,QAAQ,EAAE;OACb;MACDC,YAAY,EAAE;QACV5U,IAAI,EAAE0U,MAAM;QACZC,QAAQ,EAAE;OACb;MACDE,eAAe,EAAE;QACb7U,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;;KAEjB;IACDI,QAAQ,oVAOC;IAETC,MAAM;EAMV,CAAC;;;;ACnCD,EAMO,IAAMC,aAAa,GAAG;IACzBC,UAAU,EAAE;MACRX,YAAY,EAAZA;KACH;IACDY,OAAO,EAAAnM,eAAA,CAAAA,eAAA,KACAoM,wBAAU,CAACpF,eAAe,EAAE,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC;MAClEqF,WAAW,WAAAA,YAAChM,IAAI,EAAE;QACd,IAAI,CAACgI,eAAe,CAAChI,IAAI,CAAC;;MAEjC;IACDiM,QAAQ,EAAE;MACNjF,SAAS,WAAAA,YAAG;QACR,OAAOiB,aAAa;;KAE3B;IACDyD,QAAQ,oZAUC;IAETC,MAAM;EAMV,CAAC;;ECvCD,SAASO,UAAUA,CAACC,UAAU,EAAE;IAC5B,IAAMC,IAAI,GAAG,IAAInK,IAAI,CAACkK,UAAU,CAAC;IACjCC,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC;IACjBD,IAAI,CAACE,UAAU,CAAC,EAAE,CAAC;IACnBF,IAAI,CAACG,UAAU,CAAC,EAAE,CAAC;IACnB,OAAOH,IAAI,CAACI,WAAW,EAAE,CAAC3R,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC4R,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAC5D;EAEA,SAASC,cAAcA,CAACC,SAAS,EAAEC,SAAS,EAAEpX,KAAK,EAAE;IACjD,IAAMqX,MAAM,GAAG,IAAIC,SAAS,EAAE;IAC9B,IAAMnK,UAAU,GAAG,IAAIG,aAAa,EAAE;;;IAGtC,IAAMiK,YAAY,GAAGJ,SAAS,CAACK,aAAa,CAACJ,SAAS,CAAC;IACvD,IAAIG,YAAY,EAAE;MACd,IAAItN,KAAK,CAACC,OAAO,CAAClK,KAAK,CAAC,EAAE;;QAEtB,IAAMyX,YAAY,GAAGF,YAAY,CAACG,WAAW;QAE7C1X,KAAK,CAACoC,OAAO,CAAC,UAACoI,IAAI,EAAEmN,KAAK,EAAK;UAC3B,IAAMC,aAAa,GAAGL,YAAY,CAACM,SAAS,CAAC,IAAI,CAAC;UAClDD,aAAa,CAACF,WAAW,GAAGlN,IAAI,CAAC4B,IAAI;;;UAGrCmL,YAAY,CAACO,UAAU,CAACC,YAAY,CAACH,aAAa,EAAEL,YAAY,CAACS,WAAW,CAAC;SAChF,CAAC;QACFT,YAAY,CAACO,UAAU,CAACG,WAAW,CAACV,YAAY,CAAC;OACpD,MAAM;;QAEHA,YAAY,CAACG,WAAW,GAAG1X,KAAK,CAACoM,IAAI;;MAGzC,IAAM8L,gBAAgB,GAAG/K,UAAU,CAACK,iBAAiB,CAAC2J,SAAS,CAAC;;;MAGhE,OAAOA,SAAS;KACnB,MAAM;MACHpQ,OAAO,CAACD,KAAK,WAAAJ,MAAA,CAAW0Q,SAAS,mCAAgC,CAAC;;EAE1E;EAEA,SAASe,eAAeA,CAACC,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAE;IACjD,IAAMC,aAAa,GAAGtO,KAAK,CAACuO,IAAI,CAACJ,MAAM,CAACK,gBAAgB,CAAC,+BAA+B,CAAC,CAAC,CAACxD,IAAI,CAAC,UAACzK,IAAI;MAAA,OAAKA,IAAI,CAACkN,WAAW,KAAK,QAAQ;MAAC;IACxI,IAAMgB,cAAc,GAAGN,MAAM,CAACZ,aAAa,CAAC,gBAAgB,CAAC;IAC7D,IAAMmB,aAAa,GAAGJ,aAAa,CAACK,OAAO,CAAC,MAAM,CAAC;IACnD,IAAMC,QAAQ,GAAGF,aAAa,CAACnB,aAAa,CAAC,iBAAiB,CAAC;IAC/D,IAAMsB,MAAM,GAAGH,aAAa,CAACnB,aAAa,CAAC,eAAe,CAAC;IAC3DqB,QAAQ,CAACnB,WAAW,GAAGhB,UAAU,CAAC2B,SAAS,CAAC;IAC5CS,MAAM,CAACpB,WAAW,GAAGhB,UAAU,CAAC4B,OAAO,CAAC;IACxC,OAAOF,MAAM;EACjB;EAEA,SAASW,aAAaA,CAACX,MAAM,EAAExB,IAAI,EAAE;IACjC,IAAM2B,aAAa,GAAGtO,KAAK,CAACuO,IAAI,CAACJ,MAAM,CAACK,gBAAgB,CAAC,+BAA+B,CAAC,CAAC,CAACxD,IAAI,CAAC,UAACzK,IAAI;MAAA,OAAKA,IAAI,CAACkN,WAAW,KAAK,YAAY;MAAC;IAE5I,IAAMiB,aAAa,GAAGJ,aAAa,CAACK,OAAO,CAAC,MAAM,CAAC;IAEnD,IAAMI,OAAO,GAAGL,aAAa,CAACnB,aAAa,CAAC,OAAO,CAAC;IAEpDwB,OAAO,CAACtB,WAAW,GAAGhB,UAAU,CAACE,IAAI,CAAC;IAEtC,OAAOwB,MAAM;EACjB;;EC5DO,IAAMa,YAAY,GAAG;IAC1BtD,KAAK,EAAE;MACLuD,QAAQ,EAAE;QACR/X,IAAI,EAAE0U,MAAM;QACZC,QAAQ,EAAE;OACX;MACDqD,cAAc,EAAE;QACdhY,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;OACX;MACDsD,aAAa,EAAE;QACbjY,IAAI,EAAE0U,MAAM;QACZC,QAAQ,EAAE;OACX;MACDuD,cAAc,EAAE;QACdlY,IAAI,EAAEmY,MAAM;QACZxD,QAAQ,EAAE;;KAEb;IACDjP,IAAI,WAAAA,OAAG;MACL,OAAO;QACL0S,iBAAiB,EAAE;OACpB;KACF;IACD9C,QAAQ,EAAE;MACR+C,QAAQ,WAAAA,WAAG;QACT,OAAO,IAAI,CAACC,YAAY,CAAC,IAAI,CAACP,QAAQ,CAAC;OACxC;MACDQ,cAAc,WAAAA,iBAAG;QACf,OAAO,IAAI;;KAEd;IACDpD,OAAO,EAAE;MACPqD,cAAc,WAAAA,eAACC,KAAK,EAAE;QACpB,IAAI,CAACL,iBAAiB,GAAG,CAAC,IAAI,CAACA,iBAAiB;QAChD,IAAIK,KAAK,EAAE;UACTA,KAAK,CAACC,eAAe,EAAE;;OAE1B;MACDJ,YAAY,WAAAA,aAACK,GAAG,EAAE;QAChB,IAAIC,IAAI,GAAG,CAAC;QACZ,IAAID,GAAG,CAACzV,MAAM,KAAK,CAAC,EAAE,OAAO0V,IAAI;QACjC,KAAK,IAAI9Z,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6Z,GAAG,CAACzV,MAAM,EAAEpE,CAAC,EAAE,EAAE;UACnC,IAAI+Z,KAAI,GAAGF,GAAG,CAACG,UAAU,CAACha,CAAC,CAAC;UAC5B8Z,IAAI,GAAG,CAACA,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAGC,KAAI;UAChCD,IAAI,GAAGA,IAAI,GAAGA,IAAI;;QAEpB,OAAOA,IAAI;;KAEd;IACD7D,QAAQ;EA+BV,CAAC;;ECnFM,IAAMgE,eAAe,GAAG;IAC7BvE,KAAK,EAAE;MACLwE,OAAO,EAAE;QACPhZ,IAAI,EAAE8I,KAAK;QACX6L,QAAQ,EAAE;OACX;MACDsE,WAAW,EAAE;QACXjZ,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;OACX;MACDuE,eAAe,EAAE;QACflZ,IAAI,EAAEmY,MAAM;QACZxD,QAAQ,EAAE;OACX;MACDwE,kBAAkB,EAAE;QAClBnZ,IAAI,EAAEzB,MAAM;QACZoW,QAAQ,EAAE;OACX;MACDyE,UAAU,EAAE;QACVpZ,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;;KAEb;IACDjP,IAAI,WAAAA,OAAG;MACL,OAAO;QACL2T,SAAS,EAAE;OACZ;KACF;IACDC,OAAO,WAAAA,UAAG;MACR,IAAI,CAACD,SAAS,GAAG,KAAK;KACvB;IACDtE,QAAQ;EAkBV,CAAC;;ECjDM,SAASwE,UAAUA,CAACC,SAAS,EAAEhH,KAAK,EAAE;IACzC,IAAMiH,aAAa,GAAG,EAAE;IAExB,IAAIjH,KAAK,KAAK,UAAU,EAAE;MACtB,IAAMkH,aAAa,GAAGF,SAAS,CAACG,IAAI,CAAC,UAAAtQ,IAAI;QAAA,OAAI,UAAU,IAAIA,IAAI;QAAC;;MAEhE,IAAIqQ,aAAa,EAAE;QACfF,SAAS,CAACvY,OAAO,CAAC,UAAAoI,IAAI,EAAI;UACtB,IAAI,UAAU,IAAIA,IAAI,EAAE;YACpBoQ,aAAa,CAAC5W,IAAI,CAAAgC,KAAA,CAAlB4U,aAAa,EAAApY,YAAA,CAAAuY,iBAAA,CAASL,UAAU,CAAClQ,IAAI,CAACJ,QAAQ,EAAEuJ,KAAK,CAAC,EAAC;;SAE9D,CAAC;OACL,MAAM;QACH,OAAOgH,SAAS;;KAEvB,MAAM,IAAIhH,KAAK,KAAK,SAAS,EAAE;;MAE5B,IAAMkH,cAAa,GAAGF,SAAS,CAACG,IAAI,CAAC,UAAAtQ,IAAI;QAAA,OAAI,UAAU,IAAIA,IAAI;QAAC;MAChE,IAAMwQ,YAAY,GAAGL,SAAS,CAACG,IAAI,CAAC,UAAAtQ,IAAI;QAAA,OAAI,SAAS,IAAIA,IAAI;QAAC;MAC9DzD,OAAO,CAAC8G,GAAG,CAACgN,cAAa,EAAEG,YAAY,CAAC;;MAExC,IAAIH,cAAa,EAAE;QACf,IAAMI,QAAQ,GAAGP,UAAU,CAACC,SAAS,EAAE,UAAU,CAAC;QAClD5T,OAAO,CAAC8G,GAAG,CAACoN,QAAQ,CAAC;QACrBA,QAAQ,CAAC7Y,OAAO,CAAC,UAAAoI,IAAI,EAAI;UACrBoQ,aAAa,CAAC5W,IAAI,CAAAgC,KAAA,CAAlB4U,aAAa,EAAApY,YAAA,CAAAuY,iBAAA,CAASvQ,IAAI,CAAChC,OAAO,EAAC;SACtC,CAAC;OACL,MAAM,IAAIwS,YAAY,EAAE;;QAErBL,SAAS,CAACvY,OAAO,CAAC,UAAAoI,IAAI,EAAI;UACtB,IAAI,SAAS,IAAIA,IAAI,EAAE;YACnBoQ,aAAa,CAAC5W,IAAI,CAAAgC,KAAA,CAAlB4U,aAAa,EAAApY,YAAA,CAAAuY,iBAAA,CAASvQ,IAAI,CAAChC,OAAO,EAAC;;SAE1C,CAAC;;KAET,MAAM;MACH,OAAOmS,SAAS;;IAEpB,OAAOC,aAAa,CAAC7S,MAAM,CAAC,UAAAyC,IAAI;MAAA,OAAIA,IAAI,KAAK,IAAI;MAAC;EACtD;;;;ACvCA,EAOO,IAAM0Q,kBAAkB,GAAG;IAChCzW,IAAI,EAAE,oBAAoB;IAC1BkR,KAAK,EAAE;MACLwF,WAAW,EAAE;QACXha,IAAI,EAAE0U,MAAM;QACZC,QAAQ,EAAE;OACX;MACDsF,KAAK,EAAE;QACLja,IAAI,EAAE0U,MAAM;QACZC,QAAQ,EAAE;OACX;MACDqE,OAAO,EAAE;QACPhZ,IAAI,EAAE8I,KAAK;QACX6L,QAAQ,EAAE;OACX;MACDuF,QAAQ,EAAE;QACRla,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;OACX;MACDwF,QAAQ,EAAE;QACRna,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;OACX;MACDyF,eAAe,EAAE;QACfpa,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;OACX;MACD0F,eAAe,EAAE;QACfra,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;OACX;MACDsE,WAAW,EAAE;QACXjZ,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;OACX;MACD2F,mBAAmB,EAAE;QACnBta,IAAI,EAAEua,OAAO;QACb5F,QAAQ,EAAE;OACX;MACDwE,kBAAkB,EAAE;QAClBnZ,IAAI,EAAEzB,MAAM;QACZoW,QAAQ,EAAE;;KAEb;IACDjP,IAAI,WAAAA,OAAG;MACL,OAAO;QACL8U,aAAa,EAAE,EAAE;QACjBpC,iBAAiB,EAAE,KAAK;QACxBqC,SAAS,EAAE,KAAK;QAChBC,eAAe,EAAE;OAClB;KACF;IACDxF,UAAU,EAAE;MACV4C,YAAY,EAAZA,YAAY;MACZiB,eAAe,EAAfA;KACD;IACD4B,KAAK,EAAE;MACLL,mBAAmB,WAAAA,oBAACM,QAAQ,EAAEC,QAAQ,EAAE;QACtC,IAAI,CAACJ,SAAS,GAAGG,QAAQ;;KAE5B;IACDtF,QAAQ,EAAE;MACRwF,aAAa,WAAAA,gBAAG;QACd,OAAO,IAAI,CAAC9B,OAAO;;KAEtB;IACD7D,OAAO,EAAAnM,eAAA,CAAAA,eAAA,KACFoM,wBAAU,CAACpF,eAAe,EAAE,CAAC,eAAe,CAAC,CAAC;MACjDwI,cAAc,WAAAA,iBAAG;QACf,IAAI,CAACJ,iBAAiB,GAAG,CAAC,IAAI,CAACA,iBAAiB;OACjD;MACD2C,eAAe,WAAAA,gBAAC/B,OAAO,EAAE;QACvB,IAAI,CAACyB,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;QAChC,IAAMO,UAAU,GAAGzB,UAAU,CAACP,OAAO,EAAE,IAAI,CAACgB,WAAW,CAAC;QACxD,IAAI,IAAI,CAACS,SAAS,EAAE;UAClB,IAAI,CAACL,eAAe,CAACY,UAAU,CAAC;SACjC,MAAM;UACL,IAAI,CAACX,eAAe,CAACW,UAAU,CAAC;;OAEnC;MACDC,OAAO,WAAAA,QAAC5R,IAAI,EAAE;QACZ,IAAI,CAAC,IAAI,CAACmR,aAAa,CAAC1G,IAAI,CAAC,UAACoH,MAAM;UAAA,OAAKA,MAAM,CAACjQ,IAAI,KAAK5B,IAAI,CAAC4B,IAAI;UAAC,EAAE;UACnE,IAAI,CAACuP,aAAa,CAAC3X,IAAI,CAACwG,IAAI,CAAC;UAC7B,IAAI,IAAI,CAAC6Q,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAAC7Q,IAAI,CAAC;SACvC,MAAM;UACL,IAAI,CAAC8R,UAAU,CAAC9R,IAAI,CAAC;;OAExB;MACD8R,UAAU,WAAAA,WAAC9R,IAAI,EAAE;QACf,IAAI,CAACmR,aAAa,GAAG,IAAI,CAACA,aAAa,CAAC5T,MAAM,CAC5C,UAACsU,MAAM;UAAA,OAAKA,MAAM,CAACjQ,IAAI,KAAK5B,IAAI,CAAC4B,IAAI;SACvC,CAAC;QACD,IAAI,IAAI,CAACkP,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAAC9Q,IAAI,CAAC;OACvC;MACD+R,UAAU,WAAAA,WAACF,MAAM,EAAE;QACjB,OAAO,IAAI,CAACV,aAAa,CAACb,IAAI,CAAC,UAACtQ,IAAI;UAAA,OAAKA,IAAI,CAAC4B,IAAI,KAAKiQ,MAAM,CAACjQ,IAAI;UAAC;OACpE;MACDoQ,WAAW,WAAAA,cAAG;QACZ,IAAMC,WAAW,GACf,IAAI,CAACtB,WAAW,KAAK,UAAU,IAAI,IAAI,CAACA,WAAW,KAAK,SAAS;QACnE,IAAMN,aAAa,GACjB,IAAI,CAACV,OAAO,CAAC9V,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC8V,OAAO,CAAC,CAAC,CAAC,CAAC/P,QAAQ,KAAK6J,SAAS;QACnE,OAAOwI,WAAW,IAAI5B,aAAa;OACpC;MACD6B,mBAAmB,WAAAA,sBAAG;QACpB,IAAI,CAACb,eAAe,GAAG,IAAI;;MAE9B;IACD3F,QAAQ;EA8DV,CAAC;;EC7KM,IAAMyG,kBAAkB,GAAG;IAC9BhH,KAAK,EAAE;MACHgG,aAAa,EAAE;QACXxa,IAAI,EAAE8I,KAAK;QACX6L,QAAQ,EAAE;OACb;MACDwG,UAAU,EAAE;QACRnb,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;OACb;MACD8G,SAAS,EAAE;QACPzb,IAAI,EAAE8U,QAAQ;QACdH,QAAQ,EAAE;;KAEjB;IACDI,QAAQ;EAgBZ,CAAC;;0LClCD5W,qBAAA,YAAAA,+BAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,wBAAAa,gCAAAC,oCAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,YAAA,WAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,0CAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,kBAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,YAAA,WAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,gBAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,cAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,YAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,gBAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;EAAA,SAAAsd,UAAAtd,CAAA,EAAAE,CAAA,QAAAD,CAAA,GAAAE,MAAA,CAAAsF,IAAA,CAAAzF,CAAA,OAAAG,MAAA,CAAAod,qBAAA,QAAAhd,CAAA,GAAAJ,MAAA,CAAAod,qBAAA,CAAAvd,CAAA,GAAAE,CAAA,KAAAK,CAAA,GAAAA,CAAA,CAAAiI,MAAA,WAAAtI,CAAA,WAAAC,MAAA,CAAAqd,wBAAA,CAAAxd,CAAA,EAAAE,CAAA,EAAAiB,UAAA,OAAAlB,CAAA,CAAAwE,IAAA,CAAAgC,KAAA,CAAAxG,CAAA,EAAAM,CAAA,YAAAN,CAAA;EAAA,SAAA2K,gBAAA5K,CAAA,aAAAE,CAAA,MAAAA,CAAA,GAAAwG,SAAA,CAAA5B,MAAA,EAAA5E,CAAA,UAAAD,CAAA,WAAAyG,SAAA,CAAAxG,CAAA,IAAAwG,SAAA,CAAAxG,CAAA,QAAAA,CAAA,OAAAod,SAAA,CAAAnd,MAAA,CAAAF,CAAA,OAAA4C,OAAA,WAAA3C,CAAA,IAAA+C,YAAA,CAAAzC,cAAA,CAAAR,CAAA,EAAAE,CAAA,EAAAD,CAAA,CAAAC,CAAA,SAAAC,MAAA,CAAAsd,yBAAA,GAAAtd,MAAA,CAAAud,gBAAA,CAAA1d,CAAA,EAAAG,MAAA,CAAAsd,yBAAA,CAAAxd,CAAA,KAAAqd,SAAA,CAAAnd,MAAA,CAAAF,CAAA,GAAA4C,OAAA,WAAA3C,CAAA,IAAAC,MAAA,CAAAK,cAAA,CAAAR,CAAA,EAAAE,CAAA,EAAAC,MAAA,CAAAqd,wBAAA,CAAAvd,CAAA,EAAAC,CAAA,iBAAAF,CAAA;AADA,EAaO,IAAM2d,SAAS,GAAG;IACvB7G,UAAU,EAAE;MACV6E,kBAAkB,EAAlBA,kBAAkB;MAClByB,kBAAkB,EAAlBA;KACD;IACD9V,IAAI,WAAAA,OAAG;MACL,OAAO;QACL8U,aAAa,EAAE,EAAE;QACjBwB,cAAc,EAAE,IAAI;QACpB3C,SAAS,EAAE,KAAK;QAChBnC,SAAS,EAAE,EAAE;QACb7L,WAAW,EAAE,EAAE;QACf4Q,iBAAiB,EAAE;OACpB;KACF;IACD3C,OAAO,WAAAA,UAAG;MAAA,IAAAnI,KAAA;MACR,IAAM9F,WAAW,GAAG,IAAIC,IAAI,EAAE;MAC9B,IAAI,CAAC8H,aAAa,EAAE;MACpB,IAAM8I,aAAa,GAAG,IAAI5Q,IAAI,CAC5BD,WAAW,CAACE,WAAW,EAAE,EACzBF,WAAW,CAACG,QAAQ,EAAE,GAAG,CAAC,EAC1BH,WAAW,CAAC8Q,OAAO,EAAE,EACrB,CAAC,EACD,CAAC,EACD,CACF,CAAC;MACD,IAAI,CAACjF,SAAS,GAAGgF,aAAa,CAACrG,WAAW,EAAE,CAAC3R,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MAEzD,IAAI,CAACmH,WAAW,GAAGA,WAAW,CAACwK,WAAW,EAAE,CAAC3R,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MAEzD,IAAI,CAACsM,kBAAkB,CAAC4L,OAAO,CAACC,GAAG,CAAC,UAAChT,IAAI,EAAK;QAC5C,IAAI,CAAC8H,KAAI,CAACqJ,aAAa,CAACnR,IAAI,CAACiT,KAAK,CAAC,EAAE;UACnCnL,KAAI,CAACqJ,aAAa,CAACnR,IAAI,CAACiT,KAAK,CAAC,GAAG,EAAE;;OAEtC,CAAC;KACH;IACDhH,QAAQ,EAAAtM,eAAA,CAAAA,eAAA,KACHuT,sBAAQ,CAACvM,eAAe,EAAE,CAC3B,WAAW,EACX,WAAW,EACX,YAAY,EACZ,eAAe,EACf,oBAAoB,CACrB,CAAC;;MAEF8K,aAAa,WAAAA,gBAAG;QACd,OAAO,IAAI,CAAC1K,aAAa;;MAE5B;IACKoM,OAAO,WAAAA,UAAG;MAAA,IAAA/J,MAAA;MAAA,OAAApR,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAAwC;QAAA,OAAA5H,qBAAA,GAAAuB,IAAA,UAAAsG,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAjC,IAAA,GAAAiC,QAAA,CAAA5D,IAAA;YAAA;cAAA4D,QAAA,CAAA5D,IAAA;cAAA,OACRoQ,MAAI,CAACgK,SAAS,EAAE;YAAA;YAAA;cAAA,OAAAxW,QAAA,CAAA9B,IAAA;;WAAA4B,OAAA;;KACvB;IACDoP,OAAO,EAAAnM,eAAA,CAAAA,eAAA,KACFoM,wBAAU,CAACpF,eAAe,EAAE,CAC7B,aAAa,EACb,cAAc,EACd,oBAAoB,EACpB,eAAe,CAChB,CAAC;MACF0M,MAAM,WAAAA,OAACC,EAAE,EAAE;QACT,IAAIA,EAAE,EAAE;UACN,IAAI,CAACV,iBAAiB,CAACpZ,IAAI,CAAC8Z,EAAE,CAAC;;OAElC;MACDC,mBAAmB,WAAAA,oBAACnE,KAAK,EAAE;QACzB,IAAMoE,cAAc,GAAGpE,KAAK,CAACtP,MAAM;QACnC0T,cAAc,CAACC,IAAI,EAAE;OACtB;MACDC,gBAAgB,WAAAA,iBAACC,OAAO,EAAE3T,IAAI,EAAE;QAC9B,IAAI,CAAC,IAAI,CAACmR,aAAa,CAACwC,OAAO,CAAC,EAAE;UAChC,IAAI,CAACxC,aAAa,CAACwC,OAAO,CAAC,GAAG,EAAE;;QAElC,IACE,CAAC,IAAI,CAACxC,aAAa,CAACwC,OAAO,CAAC,CAAClJ,IAAI,CAC/B,UAACoH,MAAM;UAAA,OAAKA,MAAM,CAAC,MAAM,CAAC,KAAK7R,IAAI,CAAC,MAAM,CAAC;SAC7C,CAAC,EACD;UACA,IAAI,CAACmR,aAAa,CAACwC,OAAO,CAAC,MAAAzX,MAAA,CAAAlE,YAAA,CAAAuY,iBAAA,CAAO,IAAI,CAACY,aAAa,CAACwC,OAAO,CAAC,IAAE3T,IAAI,EAAC;SACrE,MAAM;UACL,IAAI,CAAC4T,gBAAgB,CAACD,OAAO,EAAE3T,IAAI,CAAC;;OAEvC;MACD4T,gBAAgB,WAAAA,iBAACD,OAAO,EAAE3T,IAAI,EAAE;QAC9B,IAAI,CAACmR,aAAa,CAACwC,OAAO,CAAC,GAAG,IAAI,CAACxC,aAAa,CAACwC,OAAO,CAAC,CAACpW,MAAM,CAC9D,UAACsU,MAAM;UAAA,OAAKA,MAAM,CAAC,MAAM,CAAC,KAAK7R,IAAI,CAAC,MAAM,CAAC;SAC7C,CAAC;OACF;MACD6T,WAAW,WAAAA,YAACF,OAAO,EAAEhE,OAAO,EAAE;QAAA,IAAAnG,MAAA;QAC5BmG,OAAO,CAAC/X,OAAO,CAAC,UAACia,MAAM,EAAK;UAC1BrI,MAAI,CAAC2H,aAAa,CAACwC,OAAO,CAAC,GAAGnK,MAAI,CAAC2H,aAAa,CAACwC,OAAO,CAAC,CAACpW,MAAM,CAC9D,UAACyC,IAAI;YAAA,OAAKA,IAAI,CAAC4B,IAAI,KAAKiQ,MAAM,CAACjQ,IAAI;WACrC,CAAC;SACF,CAAC;OACH;MACDkS,eAAe,WAAAA,gBAACH,OAAO,EAAEhE,OAAO,EAAE;QAAA,IAAA/F,MAAA;QAChC,IAAI,CAAC,IAAI,CAACuH,aAAa,CAACwC,OAAO,CAAC,EAAE;UAChC,IAAI,CAACxC,aAAa,CAACwC,OAAO,CAAC,GAAG,EAAE;;QAElChE,OAAO,CAAC/X,OAAO,CAAC,UAACia,MAAM,EAAK;UAC1B,IACE,CAACjI,MAAI,CAACuH,aAAa,CAACwC,OAAO,CAAC,CAAClJ,IAAI,CAAC,UAACzK,IAAI;YAAA,OAAKA,IAAI,CAAC4B,IAAI,KAAKiQ,MAAM,CAACjQ,IAAI;YAAC,EACtE;YACAgI,MAAI,CAACuH,aAAa,CAACwC,OAAO,CAAC,CAACna,IAAI,CAACqY,MAAM,CAAC;;SAE3C,CAAC;OACH;MACDkC,iBAAiB,WAAAA,kBAACJ,OAAO,EAAE9B,MAAM,EAAE;QACjC,IAAI,CAAC,IAAI,CAACV,aAAa,CAACwC,OAAO,CAAC,EAAE;UAChC,OAAO,KAAK;;QAEd,OAAO,IAAI,CAACxC,aAAa,CAACwC,OAAO,CAAC,CAAClJ,IAAI,CACrC,UAACuJ,OAAO;UAAA,OAAKA,OAAO,CAACpS,IAAI,KAAKiQ,MAAM,CAACjQ,IAAI;SAC3C,CAAC;OACF;MACKqS,SAAS,WAAAA,YAAG;QAAA,IAAAhK,MAAA;QAAA,OAAAjS,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAAiD;UAAA,IAAA+W,eAAA,EAAArH,MAAA,EAAAe,MAAA,EAAAuG,cAAA,EAAA9J,KAAA,EAAA8C,KAAA,EAAAiH,MAAA,EAAAC,SAAA,EAAAC,QAAA,EAAAtY,QAAA,EAAAuY,WAAA,EAAAC,IAAA,EAAAnY,IAAA;UAAA,OAAAvH,qBAAA,GAAAuB,IAAA,UAAAgH,UAAAa,SAAA;YAAA,kBAAAA,SAAA,CAAAvD,IAAA,GAAAuD,SAAA,CAAAlF,IAAA;cAAA;gBACVkb,eAAe,GAAGhf,MAAM,CAACsF,IAAI,CAACyP,MAAI,CAACkH,aAAa,CAAC,CAACtX,MAAM,GAAG,CAAC;gBAAA,IAE/DoQ,MAAI,CAAC9C,kBAAkB,CAAC4L,OAAO,CAACtI,IAAI,CACnC,UAACzK,IAAI,EAAEmN,KAAK;kBAAA,OAAKlD,MAAI,CAACkH,aAAa,CAACnR,IAAI,CAACiT,KAAK,CAAC,CAACpZ,MAAM,GAAG,CAAC;iBAC5D,CAAC;kBAAAqE,SAAA,CAAAlF,IAAA;kBAAA;;gBAEDiR,MAAI,CAAC0I,cAAc,GAAG,iCAAiC;gBAAC,OAAAzU,SAAA,CAAArF,MAAA;cAAA;gBAGpDgU,MAAM,GAAG,IAAIC,SAAS,EAAE;gBAC1Bc,MAAM,GAAGf,MAAM,CAAC4H,eAAe,CACjCxK,MAAI,CAACjD,SAAS,CAACiD,MAAI,CAAC/C,UAAU,CAAC,EAC/B,UACF,CAAC;gBACKiN,cAAc,GAAGvG,MAAM,CAACK,gBAAgB,CAAC,kBAAkB,CAAC;gBAAA5D,KAAA,gBAAAvV,qBAAA,GAAAoF,IAAA,UAAAmQ;kBAAA,IAAAqK,aAAA,EAAAC,mBAAA,EAAAC,SAAA,EAAAC,iBAAA,EAAAC,YAAA,EAAAC,cAAA;kBAAA,OAAAjgB,qBAAA,GAAAuB,IAAA,UAAAmU,OAAAlN,SAAA;oBAAA,kBAAAA,SAAA,CAAA3C,IAAA,GAAA2C,SAAA,CAAAtE,IAAA;sBAAA;wBAE1D0b,aAAa,GAAGzK,MAAI,CAAC9C,kBAAkB,CAAC4L,OAAO,CAAC5F,KAAK,CAAC;wBAAA,MAE1D,CAAClD,MAAI,CAACkH,aAAa,CAACuD,aAAa,CAACzB,KAAK,CAAC,IACxChJ,MAAI,CAACkH,aAAa,CAACuD,aAAa,CAACzB,KAAK,CAAC,CAACpZ,MAAM,GAAG,CAAC;0BAAAyD,SAAA,CAAAtE,IAAA;0BAAA;;wBAAA,OAAAsE,SAAA,CAAAzE,MAAA;sBAAA;wBAI9C8b,mBAAmB,GAAGlV,KAAK,CAACuO,IAAI,CAACmG,cAAc,CAAC;wBAChDS,SAAS,GAAGD,mBAAmB,CAAClK,IAAI,CACxC,UAACzK,IAAI;0BAAA,OAAKA,IAAI,CAACkN,WAAW,KAAKwH,aAAa,CAACM,KAAK;yBACpD,CAAC;wBACKH,iBAAiB,GAAGD,SAAS,CAACxG,OAAO,CAAC,MAAM,CAAC;wBAC7C0G,YAAY,GAAGD,iBAAiB,CAAC7H,aAAa,CAAC,OAAO,CAAC;wBACvD+H,cAAc,GAAGrI,cAAc,CACnCmI,iBAAiB,EACjB,OAAO,EACP5K,MAAI,CAACkH,aAAa,CAACuD,aAAa,CAACzB,KAAK,CACxC,CAAC;wBACD4B,iBAAiB,CAACvH,UAAU,CAAC2H,YAAY,CACvCF,cAAc,EACdF,iBACF,CAAC;sBAAC;sBAAA;wBAAA,OAAAvX,SAAA,CAAAxC,IAAA;;qBAAAuP,KAAA;;gBAAAnM,SAAA,CAAAlB,EAAA,GAAAlI,qBAAA,GAAA0F,IAAA,CAtBgByP,MAAI,CAAC9C,kBAAkB,CAAC4L,OAAO;cAAA;gBAAA,KAAA7U,SAAA,CAAAyM,EAAA,GAAAzM,SAAA,CAAAlB,EAAA,IAAA1E,IAAA;kBAAA4F,SAAA,CAAAlF,IAAA;kBAAA;;gBAAxCmU,KAAK,GAAAjP,SAAA,CAAAyM,EAAA,CAAAnV,KAAA;gBAAA,OAAA0I,SAAA,CAAA9C,aAAA,CAAAiP,KAAA;cAAA;gBAAA,KAAAnM,SAAA,CAAAgX,EAAA;kBAAAhX,SAAA,CAAAlF,IAAA;kBAAA;;gBAAA,OAAAkF,SAAA,CAAArF,MAAA;cAAA;gBAAAqF,SAAA,CAAAlF,IAAA;gBAAA;cAAA;gBAwBhB,KAAWmU,MAAK,IAAIlD,MAAI,CAAC9C,kBAAkB,CAACgO,UAAU,EAAE;kBAChDd,SAAS,GAAGpK,MAAI,CAAC9C,kBAAkB,CAACgO,UAAU,CAAChI,MAAK,CAAC,CAACiI,IAAI;kBAChE,IAAIf,SAAS,KAAK,QAAQ,EAAE;oBAC1BzG,MAAM,GAAGD,eAAe,CAACC,MAAM,EAAE3D,MAAI,CAAC4D,SAAS,EAAE5D,MAAI,CAACjI,WAAW,CAAC;mBACnE,MAAM,IAAIqS,SAAS,KAAK,aAAa,EAAE;oBACtCzG,MAAM,GAAGW,aAAa,CAACX,MAAM,EAAE3D,MAAI,CAACjI,WAAW,CAAC;;;gBAGpDiI,MAAI,CAAC+F,SAAS,GAAG,CAAC/F,MAAI,CAAC+F,SAAS;gBAAC9R,SAAA,CAAAlF,IAAA;gBAAA,OACV6I,cAAc,CAACoI,MAAI,CAAC/C,UAAU,CAAC;cAAA;gBAAhDoN,QAAQ,GAAApW,SAAA,CAAAxF,IAAA;gBAAAwF,SAAA,CAAAlF,IAAA;gBAAA,OACSsJ,eAAe,CAACsL,MAAM,EAAE0G,QAAQ,CAAC;cAAA;gBAAlDtY,QAAQ,GAAAkC,SAAA,CAAAxF,IAAA;gBAAA6b,WAAA,GACSpW,IAAI,CAACC,KAAK,CAACpC,QAAQ,CAAC,EAAnCwY,IAAI,GAAAD,WAAA,CAAJC,IAAI,EAAEnY,IAAI,GAAAkY,WAAA,CAAJlY,IAAI;gBAClB4N,MAAI,CAAC9B,kBAAkB,CAACqM,IAAI,CAAC;gBAC7BvK,MAAI,CAAC7B,YAAY,CAACjK,IAAI,CAACC,KAAK,CAAC/B,IAAI,CAAC,EAAE4N,MAAI,CAACkH,aAAa,CAAC;gBACvDlH,MAAI,CAAC+F,SAAS,GAAG,CAAC/F,MAAI,CAAC+F,SAAS;gBAChC/F,MAAI,CAAC/B,WAAW,EAAE;cAAC;cAAA;gBAAA,OAAAhK,SAAA,CAAApD,IAAA;;aAAAqC,QAAA;;;MAEtB;IACDuO,QAAQ;EA2GV,CAAC;;EClSM,IAAM2J,UAAU,GAAG;IACtBlK,KAAK,EAAE;MACH5C,WAAW,EAAE;QACT5R,IAAI,EAAEmY,MAAM;QACZwG,OAAO,EAAE;OACZ;MACDzM,UAAU,EAAE;QACRlS,IAAI,EAAEmY,MAAM;QACZwG,OAAO,EAAE;OACZ;MACDC,gBAAgB,EAAE;QACd5e,IAAI,EAAE8U,QAAQ;QACd6J,OAAO,EAAE;;KAEhB;IACDxJ,OAAO,EAAE;MACL0J,UAAU,WAAAA,aAAG;QACT,IAAI,IAAI,CAACjN,WAAW,IAAI,IAAI,CAACM,UAAU,GAAG,CAAC,EAAE;UACzC;;QAEJ,IAAM4M,UAAU,GAAG,IAAI,CAAClN,WAAW,GAAG,CAAC;QACvC,IAAI,CAACgN,gBAAgB,CAACE,UAAU,CAAC;QACjC;OACH;MACDC,UAAU,WAAAA,aAAG;QACT,IAAMD,UAAU,GAAG,IAAI,CAAClN,WAAW,GAAG,CAAC;QACvC,IAAI,IAAI,CAACA,WAAW,IAAI,CAAC,EAAE;UACvB;;QAEJ,IAAI,CAACgN,gBAAgB,CAACE,UAAU,CAAC;QACjC;;KAEP;IACD/J,QAAQ;EA8BZ,CAAC;;ECjEM,IAAMiK,SAAS,GAAG;IACrB1b,IAAI,EAAE,WAAW;IACjBkR,KAAK,EAAE;MACHwE,OAAO,EAAE;QACLhZ,IAAI,EAAE8I,KAAK;QACX6L,QAAQ,EAAE;OACb;MACDsK,QAAQ,EAAE;QACNjf,IAAI,EAAEmY,MAAM;QACZxD,QAAQ,EAAE;;KAEjB;IACDjP,IAAI,WAAAA,OAAG;MACH,OAAO;QACHwZ,aAAa,EAAE,IAAIC,GAAG,EAAE;OAC3B;KACJ;IACDhK,OAAO,EAAE;MACLiK,eAAe,WAAAA,gBAACC,MAAM,EAAE;QACpB,IAAMC,YAAY,GAAG,IAAI,CAACtG,OAAO,CAACqG,MAAM,CAAC,CAAC,CAAC,CAAC;;;QAG5C,IAAIA,MAAM,GAAG,CAAC,GAAG,IAAI,CAACrG,OAAO,CAAC9V,MAAM,IAAI,IAAI,CAAC8V,OAAO,CAACqG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKC,YAAY,EAAE;;UAElF,IAAMjN,QAAQ,GAAG,IAAI,CAAC2G,OAAO,CAAC9U,KAAK,CAACmb,MAAM,GAAG,CAAC,CAAC,CAC1CE,SAAS,CAAC,UAAClW,IAAI,EAAEmN,KAAK;YAAA,OAAKnN,IAAI,CAAC,CAAC,CAAC,KAAKiW,YAAY;YAAC;;UAEzD,IAAIjN,QAAQ,KAAK,CAAC,CAAC,EAAE;YACjB,OAAO,IAAI,CAAC2G,OAAO,CAAC9U,KAAK,CAACmb,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC,GAAGhN,QAAQ,CAAC;WAC/D,MAAM;YACH,OAAO,IAAI,CAAC2G,OAAO,CAAC9U,KAAK,CAACmb,MAAM,GAAG,CAAC,CAAC;;;QAG7C,OAAO,IAAI;OACd;MACDG,SAAS,WAAAA,UAACH,MAAM,EAAE;QACd,IAAI,IAAI,CAACH,aAAa,CAACO,GAAG,CAACJ,MAAM,CAAC,EAAE;UAChC,IAAI,CAACH,aAAa,UAAO,CAACG,MAAM,CAAC,CAAC;SACrC,MAAM;UACH,IAAI,CAACH,aAAa,CAACQ,GAAG,CAACL,MAAM,CAAC,CAAC;;QAEnCzZ,OAAO,CAAC8G,GAAG,CAAC,IAAI,CAACwS,aAAa,CAAC;OAClC;MACDS,cAAc,WAAAA,eAACN,MAAM,EAAE;QACnB,OAAO,IAAI,CAACH,aAAa,CAACO,GAAG,CAACJ,MAAM,CAAC,CAAC;;KAE7C;IACD/J,QAAQ,EAAE;MACNsK,gBAAgB,WAAAA,mBAAG;QAAA,IAAAzO,KAAA;QACf,OAAO,IAAI,CAAC6H,OAAO,CACdqD,GAAG,CAAC,UAACxd,KAAK,EAAE2X,KAAK;UAAA,OAAM;YAAC3X,KAAK,EAALA,KAAK;YAAE2X,KAAK,EAALA;WAAM;SAAC,CAAC,CACvC5P,MAAM,CAAC,UAAAyC,IAAI;UAAA,OAAIA,IAAI,CAACxK,KAAK,CAAC,CAAC,CAAC,KAAKsS,KAAI,CAAC8N,QAAQ;UAAC,CAC/C5C,GAAG,CAAC,UAAAhT,IAAI;UAAA,OAAIA,IAAI,CAACmN,KAAK;UAAC;;KAEnC;IACD8C,OAAO,WAAAA,UAAE;MAAA,IAAA7G,MAAA;MACL,IAAI,CAACmN,gBAAgB,CAAC3e,OAAO,CAAC,UAACoI,IAAI,EAACmN,KAAK,EAAK;QAC1C,IAAI/D,MAAI,CAAC2M,eAAe,CAAC/V,IAAI,CAAC,EAAC;UAC3BoJ,MAAI,CAAC+M,SAAS,CAACnW,IAAI,CAAC;;OAE3B,CAAC;KACL;IACD0L,QAAQ;EAuCZ,CAAC;;;;ACrGD,EAQO,IAAM8K,WAAW,GAAG;;;;;;;;;;;IAWzBvK,QAAQ,EAAAtM,eAAA,KACHuT,sBAAQ,CAACvM,eAAe,EAAE,CAC3B,kBAAkB,EAClB,iBAAiB,EACjB,oBAAoB,EACpB,oBAAoB,EACpB,YAAY,CACb,CAAC,CACH;IACDmF,OAAO,EAAE;MACP2K,iBAAiB,WAAAA,oBAAG;QAClB,OAAOvT,kBAAkB,CAAC,IAAI,CAACqE,eAAe,CAAC;OAChD;MACDmP,iBAAiB,WAAAA,oBAAG;QAClB,OAAOxS,QAAQ,CAAC,IAAI,CAACqD,eAAe,CAAC;;KAExC;IACDsE,UAAU,EAAE;MACVwJ,UAAU,EAAVA,UAAU;MACVM,SAAS,EAATA;KACD;IACD1F,OAAO,WAAAA,UAAG;MACR,IAAM0G,IAAI,GAAG,IAAIC,YAAI,CAAC;QACpBC,SAAS,EAAErT,QAAQ,CAACwJ,aAAa,CAAC,iBAAiB,CAAC;QACpD8J,SAAS,EAAE,KAAK;QAChBC,WAAW,EAAE;OACd,CAAC;MACFJ,IAAI,CAACK,IAAI,EAAE;KACZ;IACDtL,QAAQ;EAiCV,CAAC;;;;ACjFD,EAOO,IAAMuL,WAAW,GAAG;IACzBhL,QAAQ,EAAAtM,eAAA,KACHuT,sBAAQ,CAACvM,eAAe,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC,CAClE;IACDtK,IAAI,WAAAA,OAAG;MACL,OAAO;QACL6a,OAAO,EAAE;OACV;KACF;IACDrL,UAAU,EAAE;MACVD,aAAa,EAAbA,aAAa;MACb8G,SAAS,EAATA,SAAS;MACT8D,WAAW,EAAXA;KACD;IACD1K,OAAO,EAAE;MACPvB,KAAK,WAAAA,QAAG;QACNhO,OAAO,CAAC8G,GAAG,CAACT,aAAa,EAAE,CAAC;;KAE/B;IACD8I,QAAQ;EAqBV,CAAC;;0LC9CD5W,qBAAA,YAAAA,+BAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,wBAAAa,gCAAAC,oCAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,YAAA,WAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,0CAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,kBAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,YAAA,WAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,gBAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,cAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,YAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,gBAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;EAAA,SAAAoiB,2BAAAtX,GAAA,EAAAuX,UAAA,EAAA5hB,KAAA,IAAA6hB,0BAAA,CAAAxX,GAAA,EAAAuX,UAAA,GAAAA,UAAA,CAAAE,GAAA,CAAAzX,GAAA,EAAArK,KAAA;EAAA,SAAA6hB,2BAAAxX,GAAA,EAAA0X,iBAAA,QAAAA,iBAAA,CAAAnB,GAAA,CAAAvW,GAAA,eAAA/G,SAAA;EAAA,SAAA0e,sBAAAvgB,CAAA,EAAAtB,CAAA,WAAAsB,CAAA,CAAAwgB,GAAA,CAAAC,iBAAA,CAAAzgB,CAAA,EAAAtB,CAAA;EAAA,SAAAgiB,sBAAA1gB,CAAA,EAAAtB,CAAA,EAAAV,CAAA,WAAAgC,CAAA,CAAAqgB,GAAA,CAAAI,iBAAA,CAAAzgB,CAAA,EAAAtB,CAAA,GAAAV,CAAA,GAAAA,CAAA;EAAA,SAAAyiB,kBAAA3iB,CAAA,EAAAC,CAAA,EAAAI,CAAA,6BAAAL,CAAA,GAAAA,CAAA,KAAAC,CAAA,GAAAD,CAAA,CAAAqhB,GAAA,CAAAphB,CAAA,UAAAyG,SAAA,CAAA5B,MAAA,OAAA7E,CAAA,GAAAI,CAAA,YAAA0D,SAAA;AADA,EASqD,IAAA8e,YAAA,oBAAAC,OAAA;EAAA,IAAAC,iBAAA,oBAAAD,OAAA;AAErD,MAAaE,OAAO;IAGhB,SAAAA,QAAYC,QAAQ,EAAE;MAAAhgB,YAAA,CAAAigB,cAAA,OAAAF,OAAA;MAAAZ,0BAAA,OAAAS,YAAA;MAAAT,0BAAA,OAAAW,iBAAA;MAClB,IAAI,CAACE,QAAQ,GAAGxU,QAAQ,CAACwJ,aAAa,CAACgL,QAAQ,CAAC;MAChD,IAAI,CAACE,KAAK,GAAGC,yBAAW,EAAE;MAC1B,IAAI,CAACC,cAAc,EAAE,CAACjgB,IAAI,CAAC,UAAAlD,CAAC;QAAA,OAAIsH,OAAO,CAAC8G,GAAG,CAAC,OAAO,CAAC;QAAC;;IACxDrL,YAAA,CAAAqgB,WAAA,CAAAN,OAAA;MAAAO,GAAA;MAAA9iB,KAAA;QAAA,IAAA+iB,aAAA,GAAAvgB,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAAwC;UAAA,IAAA8b,WAAA,EAAAxR,SAAA,EAAAyR,UAAA,EAAAC,oBAAA,EAAAC,WAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,YAAA;UAAA,OAAAhkB,qBAAA,GAAAuB,IAAA,UAAAsG,SAAAC,QAAA;YAAA,kBAAAA,QAAA,CAAAjC,IAAA,GAAAiC,QAAA,CAAA5D,IAAA;cAAA;;gBAIG2e,qBAAA,CAAAG,iBAAA,MAAI,EAAqBtU,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;gBACtD+T,qBAAA,CAAAM,iBAAA,MAAI,EAAmBiB,SAAS,CAAC1C,GAAG,CAAC,eAAe,CAAC;gBACrD,IAAI,CAAC2B,QAAQ,CAACpU,WAAW,CAAA4T,qBAAA,CAAAM,iBAAA,EAAC,IAAI,CAAkB,CAAC;gBAC3CU,WAAW,GAAG,yBAAyB;gBACvCxR,SAAS,GAAG,EAAE;gBAAApK,QAAA,CAAA5D,IAAA;gBAAA,OACK+C,KAAK,CAACyc,WAAW,GAAG,uBAAuB,CAAC;cAAA;gBAA/DC,UAAU,GAAA7b,QAAA,CAAAlE,IAAA;gBAAAkE,QAAA,CAAA5D,IAAA;gBAAA,OACayf,UAAU,CAACxV,IAAI,EAAE;cAAA;gBAA9C+D,SAAS,CAAC,SAAS,CAAC,GAAApK,QAAA,CAAAlE,IAAA;gBAAAkE,QAAA,CAAA5D,IAAA;gBAAA,OAEe+C,KAAK,CAACyc,WAAW,GAAG,oCAAoC,CAAC;cAAA;gBAAtFE,oBAAoB,GAAA9b,QAAA,CAAAlE,IAAA;gBAAAkE,QAAA,CAAA5D,IAAA;gBAAA,OACgB0f,oBAAoB,CAACzV,IAAI,EAAE;cAAA;gBAArE+D,SAAS,CAAC,sBAAsB,CAAC,GAAApK,QAAA,CAAAlE,IAAA;gBAAAkE,QAAA,CAAA5D,IAAA;gBAAA,OAEP+C,KAAK,CAACyc,WAAW,GAAG,2BAA2B,CAAC;cAAA;gBAApEG,WAAW,GAAA/b,QAAA,CAAAlE,IAAA;gBAAAkE,QAAA,CAAA5D,IAAA;gBAAA,OACgB2f,WAAW,CAAC1V,IAAI,EAAE;cAAA;gBAAnD+D,SAAS,CAAC,aAAa,CAAC,GAAApK,QAAA,CAAAlE,IAAA;gBAAAkE,QAAA,CAAA5D,IAAA;gBAAA,OAEH+C,KAAK,CAACyc,WAAW,GAAG,sBAAsB,CAAC;cAAA;gBAA1DI,MAAM,GAAAhc,QAAA,CAAAlE,IAAA;gBAAAkE,QAAA,CAAA5D,IAAA;gBAAA,OACgB4f,MAAM,CAAC3V,IAAI,EAAE;cAAA;gBAAzC+D,SAAS,CAAC,QAAQ,CAAC,GAAApK,QAAA,CAAAlE,IAAA;gBAAAkE,QAAA,CAAA5D,IAAA;gBAAA,OAEC+C,KAAK,CAACyc,WAAW,GAAG,qBAAqB,CAAC;cAAA;gBAAxDK,KAAK,GAAAjc,QAAA,CAAAlE,IAAA;gBAAAkE,QAAA,CAAA5D,IAAA;gBAAA,OACgB6f,KAAK,CAAC5V,IAAI,EAAE;cAAA;gBAAvC+D,SAAS,CAAC,OAAO,CAAC,GAAApK,QAAA,CAAAlE,IAAA;gBACZogB,YAAY,GAAGnS,eAAe,CAAC,IAAI,CAACuR,KAAK,CAAC;gBAChDY,YAAY,CAAC/Q,YAAY,CAACf,SAAS,CAAC;gBACpC,IAAI,CAACgR,QAAQ,CAACvK,WAAW,CAAA+J,qBAAA,CAAAM,iBAAA,EAAC,IAAI,CAAkB,CAAC;gBACjDH,qBAAA,CAAAG,iBAAA,MAAI,EAAqB,IAAI;cAAC;cAAA;gBAAA,OAAAlb,QAAA,CAAA9B,IAAA;;aAAA4B,OAAA;;QAAA,SAAAsc;UAAA,OAAAT,aAAA,CAAA/c,KAAA,OAAAC,SAAA;;QAAA,OAAAud,YAAA;;;MAAAV,GAAA;MAAA9iB,KAAA;QAAA,IAAAyjB,eAAA,GAAAjhB,YAAA,CAAA0D,gBAAA,eAAA5G,qBAAA,GAAAoF,IAAA,UAAAiD;UAAA,IAAA+b,OAAA;UAAA,OAAApkB,qBAAA,GAAAuB,IAAA,UAAAgH,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA3C,IAAA,GAAA2C,SAAA,CAAAtE,IAAA;cAAA;gBAIxBkgB,OAAO,GAAG,IAAI;gBAAA5b,SAAA,CAAAtE,IAAA;gBAAA,OACd,IAAI,CAACggB,YAAY,EAAE;cAAA;gBAEzBrB,qBAAA,CAAAC,YAAA,MAAI,EAAgBuB,iBAAS,CAACC,SAAS,CAAC;kBACpCnf,IAAI,EAAE,SAAS;kBACf4R,UAAU,EAAE;oBACRoL,WAAW,EAAXA;mBACH;kBACDoC,YAAY,WAAAA,eAAG;oBACX,IAAI,CAACC,OAAO,CAACC,WAAW,CAACjC,GAAG,CAAC4B,OAAO,CAAC;mBACxC;kBACDxN,QAAQ,EAAE;iBACb,CAAC;gBAEF8L,qBAAA,CAAAI,YAAA,MAAI,EAAc4B,GAAG,CAAC,IAAI,CAACtB,KAAK,CAAC;gBACjCV,qBAAA,CAAAI,YAAA,MAAI,EAAc6B,KAAK,CAAC,IAAI,CAACzB,QAAQ,CAAC;cAAC;cAAA;gBAAA,OAAA1a,SAAA,CAAAxC,IAAA;;aAAAqC,QAAA;;QAAA,SAAAib;UAAA,OAAAa,eAAA,CAAAzd,KAAA,OAAAC,SAAA;;QAAA,OAAA2c,cAAA;;;MAAAE,GAAA;MAAA9iB,KAAA,WAAAkkB,iBAG1B;QACb,IAAAlC,qBAAA,CAAAI,YAAA,EAAI,IAAI,GAAe;UACnBJ,qBAAA,CAAAI,YAAA,MAAI,EAAc+B,OAAO,EAAE;;;;IAElC,OAAA5B,OAAA;EAAA;;;;;;;;"}